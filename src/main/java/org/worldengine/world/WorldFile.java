// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: World.proto

package org.worldengine.world;

public final class WorldFile {
  private WorldFile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface WorldOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 width = 2;
    /**
     * <code>required int32 width = 2;</code>
     */
    boolean hasWidth();
    /**
     * <code>required int32 width = 2;</code>
     */
    int getWidth();

    // required int32 height = 3;
    /**
     * <code>required int32 height = 3;</code>
     */
    boolean hasHeight();
    /**
     * <code>required int32 height = 3;</code>
     */
    int getHeight();

    // required .World.World.DoubleMatrix heightMapData = 4;
    /**
     * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
     */
    boolean hasHeightMapData();
    /**
     * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getHeightMapData();
    /**
     * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getHeightMapDataOrBuilder();

    // required double heightMapTh_sea = 5;
    /**
     * <code>required double heightMapTh_sea = 5;</code>
     */
    boolean hasHeightMapThSea();
    /**
     * <code>required double heightMapTh_sea = 5;</code>
     */
    double getHeightMapThSea();

    // required double heightMapTh_plain = 6;
    /**
     * <code>required double heightMapTh_plain = 6;</code>
     */
    boolean hasHeightMapThPlain();
    /**
     * <code>required double heightMapTh_plain = 6;</code>
     */
    double getHeightMapThPlain();

    // required double heightMapTh_hill = 7;
    /**
     * <code>required double heightMapTh_hill = 7;</code>
     */
    boolean hasHeightMapThHill();
    /**
     * <code>required double heightMapTh_hill = 7;</code>
     */
    double getHeightMapThHill();

    // required .World.World.IntegerMatrix plates = 30;
    /**
     * <code>required .World.World.IntegerMatrix plates = 30;</code>
     *
     * <pre>
     * Plates
     * </pre>
     */
    boolean hasPlates();
    /**
     * <code>required .World.World.IntegerMatrix plates = 30;</code>
     *
     * <pre>
     * Plates
     * </pre>
     */
    org.worldengine.world.WorldFile.World.IntegerMatrix getPlates();
    /**
     * <code>required .World.World.IntegerMatrix plates = 30;</code>
     *
     * <pre>
     * Plates
     * </pre>
     */
    org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder getPlatesOrBuilder();

    // required .World.World.BooleanMatrix ocean = 8;
    /**
     * <code>required .World.World.BooleanMatrix ocean = 8;</code>
     *
     * <pre>
     * Ocean
     * </pre>
     */
    boolean hasOcean();
    /**
     * <code>required .World.World.BooleanMatrix ocean = 8;</code>
     *
     * <pre>
     * Ocean
     * </pre>
     */
    org.worldengine.world.WorldFile.World.BooleanMatrix getOcean();
    /**
     * <code>required .World.World.BooleanMatrix ocean = 8;</code>
     *
     * <pre>
     * Ocean
     * </pre>
     */
    org.worldengine.world.WorldFile.World.BooleanMatrixOrBuilder getOceanOrBuilder();

    // required .World.World.DoubleMatrix sea_depth = 29;
    /**
     * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
     */
    boolean hasSeaDepth();
    /**
     * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getSeaDepth();
    /**
     * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getSeaDepthOrBuilder();

    // optional .World.World.IntegerMatrix biome = 9;
    /**
     * <code>optional .World.World.IntegerMatrix biome = 9;</code>
     *
     * <pre>
     * Biome
     * </pre>
     */
    boolean hasBiome();
    /**
     * <code>optional .World.World.IntegerMatrix biome = 9;</code>
     *
     * <pre>
     * Biome
     * </pre>
     */
    org.worldengine.world.WorldFile.World.IntegerMatrix getBiome();
    /**
     * <code>optional .World.World.IntegerMatrix biome = 9;</code>
     *
     * <pre>
     * Biome
     * </pre>
     */
    org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder getBiomeOrBuilder();

    // optional .World.World.DoubleMatrixWithQuantiles humidity = 10;
    /**
     * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
     *
     * <pre>
     * Humidity
     * </pre>
     */
    boolean hasHumidity();
    /**
     * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
     *
     * <pre>
     * Humidity
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles getHumidity();
    /**
     * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
     *
     * <pre>
     * Humidity
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantilesOrBuilder getHumidityOrBuilder();

    // optional .World.World.DoubleMatrix irrigation = 11;
    /**
     * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
     *
     * <pre>
     * Irrigation
     * </pre>
     */
    boolean hasIrrigation();
    /**
     * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
     *
     * <pre>
     * Irrigation
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getIrrigation();
    /**
     * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
     *
     * <pre>
     * Irrigation
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getIrrigationOrBuilder();

    // optional .World.World.DoubleMatrix permeabilityData = 12;
    /**
     * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
     *
     * <pre>
     * Permeability
     * </pre>
     */
    boolean hasPermeabilityData();
    /**
     * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
     *
     * <pre>
     * Permeability
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getPermeabilityData();
    /**
     * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
     *
     * <pre>
     * Permeability
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getPermeabilityDataOrBuilder();

    // optional double permeability_low = 13;
    /**
     * <code>optional double permeability_low = 13;</code>
     */
    boolean hasPermeabilityLow();
    /**
     * <code>optional double permeability_low = 13;</code>
     */
    double getPermeabilityLow();

    // optional double permeability_med = 14;
    /**
     * <code>optional double permeability_med = 14;</code>
     */
    boolean hasPermeabilityMed();
    /**
     * <code>optional double permeability_med = 14;</code>
     */
    double getPermeabilityMed();

    // optional .World.World.DoubleMatrix watermapData = 15;
    /**
     * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
     *
     * <pre>
     * Watermap
     * </pre>
     */
    boolean hasWatermapData();
    /**
     * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
     *
     * <pre>
     * Watermap
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getWatermapData();
    /**
     * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
     *
     * <pre>
     * Watermap
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getWatermapDataOrBuilder();

    // optional double watermap_creek = 16;
    /**
     * <code>optional double watermap_creek = 16;</code>
     */
    boolean hasWatermapCreek();
    /**
     * <code>optional double watermap_creek = 16;</code>
     */
    double getWatermapCreek();

    // optional double watermap_river = 17;
    /**
     * <code>optional double watermap_river = 17;</code>
     */
    boolean hasWatermapRiver();
    /**
     * <code>optional double watermap_river = 17;</code>
     */
    double getWatermapRiver();

    // optional double watermap_mainriver = 18;
    /**
     * <code>optional double watermap_mainriver = 18;</code>
     */
    boolean hasWatermapMainriver();
    /**
     * <code>optional double watermap_mainriver = 18;</code>
     */
    double getWatermapMainriver();

    // optional .World.World.DoubleMatrix precipitationData = 19;
    /**
     * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
     *
     * <pre>
     * Precipitation
     * </pre>
     */
    boolean hasPrecipitationData();
    /**
     * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
     *
     * <pre>
     * Precipitation
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getPrecipitationData();
    /**
     * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
     *
     * <pre>
     * Precipitation
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getPrecipitationDataOrBuilder();

    // optional double precipitation_low = 20;
    /**
     * <code>optional double precipitation_low = 20;</code>
     */
    boolean hasPrecipitationLow();
    /**
     * <code>optional double precipitation_low = 20;</code>
     */
    double getPrecipitationLow();

    // optional double precipitation_med = 21;
    /**
     * <code>optional double precipitation_med = 21;</code>
     */
    boolean hasPrecipitationMed();
    /**
     * <code>optional double precipitation_med = 21;</code>
     */
    double getPrecipitationMed();

    // optional .World.World.DoubleMatrix temperatureData = 22;
    /**
     * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
     *
     * <pre>
     * Temperature
     * </pre>
     */
    boolean hasTemperatureData();
    /**
     * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
     *
     * <pre>
     * Temperature
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getTemperatureData();
    /**
     * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
     *
     * <pre>
     * Temperature
     * </pre>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getTemperatureDataOrBuilder();

    // optional double temperature_polar = 23;
    /**
     * <code>optional double temperature_polar = 23;</code>
     */
    boolean hasTemperaturePolar();
    /**
     * <code>optional double temperature_polar = 23;</code>
     */
    double getTemperaturePolar();

    // optional double temperature_alpine = 24;
    /**
     * <code>optional double temperature_alpine = 24;</code>
     */
    boolean hasTemperatureAlpine();
    /**
     * <code>optional double temperature_alpine = 24;</code>
     */
    double getTemperatureAlpine();

    // optional double temperature_boreal = 25;
    /**
     * <code>optional double temperature_boreal = 25;</code>
     */
    boolean hasTemperatureBoreal();
    /**
     * <code>optional double temperature_boreal = 25;</code>
     */
    double getTemperatureBoreal();

    // optional double temperature_cool = 26;
    /**
     * <code>optional double temperature_cool = 26;</code>
     */
    boolean hasTemperatureCool();
    /**
     * <code>optional double temperature_cool = 26;</code>
     */
    double getTemperatureCool();

    // optional double temperature_warm = 27;
    /**
     * <code>optional double temperature_warm = 27;</code>
     */
    boolean hasTemperatureWarm();
    /**
     * <code>optional double temperature_warm = 27;</code>
     */
    double getTemperatureWarm();

    // optional double temperature_subtropical = 28;
    /**
     * <code>optional double temperature_subtropical = 28;</code>
     */
    boolean hasTemperatureSubtropical();
    /**
     * <code>optional double temperature_subtropical = 28;</code>
     */
    double getTemperatureSubtropical();

    // optional .World.World.GenerationData generationData = 31;
    /**
     * <code>optional .World.World.GenerationData generationData = 31;</code>
     *
     * <pre>
     * Data about generation:
     * introduced in v0.5.3
     * this is optional for backward compatibility reasons
     * </pre>
     */
    boolean hasGenerationData();
    /**
     * <code>optional .World.World.GenerationData generationData = 31;</code>
     *
     * <pre>
     * Data about generation:
     * introduced in v0.5.3
     * this is optional for backward compatibility reasons
     * </pre>
     */
    org.worldengine.world.WorldFile.World.GenerationData getGenerationData();
    /**
     * <code>optional .World.World.GenerationData generationData = 31;</code>
     *
     * <pre>
     * Data about generation:
     * introduced in v0.5.3
     * this is optional for backward compatibility reasons
     * </pre>
     */
    org.worldengine.world.WorldFile.World.GenerationDataOrBuilder getGenerationDataOrBuilder();

    // optional .World.World.DoubleMatrix lakemap = 32;
    /**
     * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
     */
    boolean hasLakemap();
    /**
     * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getLakemap();
    /**
     * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getLakemapOrBuilder();

    // optional .World.World.DoubleMatrix rivermap = 33;
    /**
     * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
     */
    boolean hasRivermap();
    /**
     * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrix getRivermap();
    /**
     * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
     */
    org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getRivermapOrBuilder();
  }
  /**
   * Protobuf type {@code World.World}
   */
  public static final class World extends
      com.google.protobuf.GeneratedMessage
      implements WorldOrBuilder {
    // Use World.newBuilder() to construct.
    private World(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private World(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final World defaultInstance;
    public static World getDefaultInstance() {
      return defaultInstance;
    }

    public World getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private World(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              width_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              height_ = input.readInt32();
              break;
            }
            case 34: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = heightMapData_.toBuilder();
              }
              heightMapData_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heightMapData_);
                heightMapData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              heightMapThSea_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              heightMapThPlain_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              heightMapThHill_ = input.readDouble();
              break;
            }
            case 66: {
              org.worldengine.world.WorldFile.World.BooleanMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = ocean_.toBuilder();
              }
              ocean_ = input.readMessage(org.worldengine.world.WorldFile.World.BooleanMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ocean_);
                ocean_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 74: {
              org.worldengine.world.WorldFile.World.IntegerMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = biome_.toBuilder();
              }
              biome_ = input.readMessage(org.worldengine.world.WorldFile.World.IntegerMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(biome_);
                biome_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 82: {
              org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = humidity_.toBuilder();
              }
              humidity_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(humidity_);
                humidity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 90: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = irrigation_.toBuilder();
              }
              irrigation_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(irrigation_);
                irrigation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 98: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = permeabilityData_.toBuilder();
              }
              permeabilityData_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(permeabilityData_);
                permeabilityData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 105: {
              bitField0_ |= 0x00004000;
              permeabilityLow_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00008000;
              permeabilityMed_ = input.readDouble();
              break;
            }
            case 122: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = watermapData_.toBuilder();
              }
              watermapData_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(watermapData_);
                watermapData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 129: {
              bitField0_ |= 0x00020000;
              watermapCreek_ = input.readDouble();
              break;
            }
            case 137: {
              bitField0_ |= 0x00040000;
              watermapRiver_ = input.readDouble();
              break;
            }
            case 145: {
              bitField0_ |= 0x00080000;
              watermapMainriver_ = input.readDouble();
              break;
            }
            case 154: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = precipitationData_.toBuilder();
              }
              precipitationData_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(precipitationData_);
                precipitationData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 161: {
              bitField0_ |= 0x00200000;
              precipitationLow_ = input.readDouble();
              break;
            }
            case 169: {
              bitField0_ |= 0x00400000;
              precipitationMed_ = input.readDouble();
              break;
            }
            case 178: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = temperatureData_.toBuilder();
              }
              temperatureData_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(temperatureData_);
                temperatureData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 185: {
              bitField0_ |= 0x01000000;
              temperaturePolar_ = input.readDouble();
              break;
            }
            case 193: {
              bitField0_ |= 0x02000000;
              temperatureAlpine_ = input.readDouble();
              break;
            }
            case 201: {
              bitField0_ |= 0x04000000;
              temperatureBoreal_ = input.readDouble();
              break;
            }
            case 209: {
              bitField0_ |= 0x08000000;
              temperatureCool_ = input.readDouble();
              break;
            }
            case 217: {
              bitField0_ |= 0x10000000;
              temperatureWarm_ = input.readDouble();
              break;
            }
            case 225: {
              bitField0_ |= 0x20000000;
              temperatureSubtropical_ = input.readDouble();
              break;
            }
            case 234: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = seaDepth_.toBuilder();
              }
              seaDepth_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seaDepth_);
                seaDepth_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 242: {
              org.worldengine.world.WorldFile.World.IntegerMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = plates_.toBuilder();
              }
              plates_ = input.readMessage(org.worldengine.world.WorldFile.World.IntegerMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(plates_);
                plates_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 250: {
              org.worldengine.world.WorldFile.World.GenerationData.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = generationData_.toBuilder();
              }
              generationData_ = input.readMessage(org.worldengine.world.WorldFile.World.GenerationData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(generationData_);
                generationData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 258: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x80000000) == 0x80000000)) {
                subBuilder = lakemap_.toBuilder();
              }
              lakemap_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lakemap_);
                lakemap_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x80000000;
              break;
            }
            case 266: {
              org.worldengine.world.WorldFile.World.DoubleMatrix.Builder subBuilder = null;
              if (((bitField1_ & 0x00000001) == 0x00000001)) {
                subBuilder = rivermap_.toBuilder();
              }
              rivermap_ = input.readMessage(org.worldengine.world.WorldFile.World.DoubleMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rivermap_);
                rivermap_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.worldengine.world.WorldFile.internal_static_World_World_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.worldengine.world.WorldFile.internal_static_World_World_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.worldengine.world.WorldFile.World.class, org.worldengine.world.WorldFile.World.Builder.class);
    }

    public static com.google.protobuf.Parser<World> PARSER =
        new com.google.protobuf.AbstractParser<World>() {
      public World parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new World(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<World> getParserForType() {
      return PARSER;
    }

    public interface DoubleRowOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated double cells = 1;
      /**
       * <code>repeated double cells = 1;</code>
       */
      java.util.List<java.lang.Double> getCellsList();
      /**
       * <code>repeated double cells = 1;</code>
       */
      int getCellsCount();
      /**
       * <code>repeated double cells = 1;</code>
       */
      double getCells(int index);
    }
    /**
     * Protobuf type {@code World.World.DoubleRow}
     */
    public static final class DoubleRow extends
        com.google.protobuf.GeneratedMessage
        implements DoubleRowOrBuilder {
      // Use DoubleRow.newBuilder() to construct.
      private DoubleRow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DoubleRow(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DoubleRow defaultInstance;
      public static DoubleRow getDefaultInstance() {
        return defaultInstance;
      }

      public DoubleRow getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DoubleRow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  cells_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000001;
                }
                cells_.add(input.readDouble());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                  cells_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cells_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_DoubleRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_DoubleRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.DoubleRow.class, org.worldengine.world.WorldFile.World.DoubleRow.Builder.class);
      }

      public static com.google.protobuf.Parser<DoubleRow> PARSER =
          new com.google.protobuf.AbstractParser<DoubleRow>() {
        public DoubleRow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DoubleRow(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DoubleRow> getParserForType() {
        return PARSER;
      }

      // repeated double cells = 1;
      public static final int CELLS_FIELD_NUMBER = 1;
      private java.util.List<java.lang.Double> cells_;
      /**
       * <code>repeated double cells = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getCellsList() {
        return cells_;
      }
      /**
       * <code>repeated double cells = 1;</code>
       */
      public int getCellsCount() {
        return cells_.size();
      }
      /**
       * <code>repeated double cells = 1;</code>
       */
      public double getCells(int index) {
        return cells_.get(index);
      }

      private void initFields() {
        cells_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < cells_.size(); i++) {
          output.writeDouble(1, cells_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 8 * getCellsList().size();
          size += dataSize;
          size += 1 * getCellsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.DoubleRow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleRow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.DoubleRow prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.DoubleRow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.DoubleRowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleRow_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleRow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.DoubleRow.class, org.worldengine.world.WorldFile.World.DoubleRow.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.DoubleRow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleRow_descriptor;
        }

        public org.worldengine.world.WorldFile.World.DoubleRow getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.DoubleRow.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.DoubleRow build() {
          org.worldengine.world.WorldFile.World.DoubleRow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.DoubleRow buildPartial() {
          org.worldengine.world.WorldFile.World.DoubleRow result = new org.worldengine.world.WorldFile.World.DoubleRow(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cells_ = cells_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.DoubleRow) {
            return mergeFrom((org.worldengine.world.WorldFile.World.DoubleRow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.DoubleRow other) {
          if (other == org.worldengine.world.WorldFile.World.DoubleRow.getDefaultInstance()) return this;
          if (!other.cells_.isEmpty()) {
            if (cells_.isEmpty()) {
              cells_ = other.cells_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCellsIsMutable();
              cells_.addAll(other.cells_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.DoubleRow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.DoubleRow) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated double cells = 1;
        private java.util.List<java.lang.Double> cells_ = java.util.Collections.emptyList();
        private void ensureCellsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = new java.util.ArrayList<java.lang.Double>(cells_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated double cells = 1;</code>
         */
        public java.util.List<java.lang.Double>
            getCellsList() {
          return java.util.Collections.unmodifiableList(cells_);
        }
        /**
         * <code>repeated double cells = 1;</code>
         */
        public int getCellsCount() {
          return cells_.size();
        }
        /**
         * <code>repeated double cells = 1;</code>
         */
        public double getCells(int index) {
          return cells_.get(index);
        }
        /**
         * <code>repeated double cells = 1;</code>
         */
        public Builder setCells(
            int index, double value) {
          ensureCellsIsMutable();
          cells_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double cells = 1;</code>
         */
        public Builder addCells(double value) {
          ensureCellsIsMutable();
          cells_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double cells = 1;</code>
         */
        public Builder addAllCells(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureCellsIsMutable();
          super.addAll(values, cells_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double cells = 1;</code>
         */
        public Builder clearCells() {
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:World.World.DoubleRow)
      }

      static {
        defaultInstance = new DoubleRow(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.DoubleRow)
    }

    public interface BooleanRowOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated bool cells = 1;
      /**
       * <code>repeated bool cells = 1;</code>
       */
      java.util.List<java.lang.Boolean> getCellsList();
      /**
       * <code>repeated bool cells = 1;</code>
       */
      int getCellsCount();
      /**
       * <code>repeated bool cells = 1;</code>
       */
      boolean getCells(int index);
    }
    /**
     * Protobuf type {@code World.World.BooleanRow}
     */
    public static final class BooleanRow extends
        com.google.protobuf.GeneratedMessage
        implements BooleanRowOrBuilder {
      // Use BooleanRow.newBuilder() to construct.
      private BooleanRow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BooleanRow(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BooleanRow defaultInstance;
      public static BooleanRow getDefaultInstance() {
        return defaultInstance;
      }

      public BooleanRow getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BooleanRow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  cells_ = new java.util.ArrayList<java.lang.Boolean>();
                  mutable_bitField0_ |= 0x00000001;
                }
                cells_.add(input.readBool());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                  cells_ = new java.util.ArrayList<java.lang.Boolean>();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cells_.add(input.readBool());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_BooleanRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_BooleanRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.BooleanRow.class, org.worldengine.world.WorldFile.World.BooleanRow.Builder.class);
      }

      public static com.google.protobuf.Parser<BooleanRow> PARSER =
          new com.google.protobuf.AbstractParser<BooleanRow>() {
        public BooleanRow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BooleanRow(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BooleanRow> getParserForType() {
        return PARSER;
      }

      // repeated bool cells = 1;
      public static final int CELLS_FIELD_NUMBER = 1;
      private java.util.List<java.lang.Boolean> cells_;
      /**
       * <code>repeated bool cells = 1;</code>
       */
      public java.util.List<java.lang.Boolean>
          getCellsList() {
        return cells_;
      }
      /**
       * <code>repeated bool cells = 1;</code>
       */
      public int getCellsCount() {
        return cells_.size();
      }
      /**
       * <code>repeated bool cells = 1;</code>
       */
      public boolean getCells(int index) {
        return cells_.get(index);
      }

      private void initFields() {
        cells_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < cells_.size(); i++) {
          output.writeBool(1, cells_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 1 * getCellsList().size();
          size += dataSize;
          size += 1 * getCellsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.BooleanRow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.BooleanRow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.BooleanRow prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.BooleanRow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.BooleanRowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_BooleanRow_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_BooleanRow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.BooleanRow.class, org.worldengine.world.WorldFile.World.BooleanRow.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.BooleanRow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_BooleanRow_descriptor;
        }

        public org.worldengine.world.WorldFile.World.BooleanRow getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.BooleanRow.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.BooleanRow build() {
          org.worldengine.world.WorldFile.World.BooleanRow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.BooleanRow buildPartial() {
          org.worldengine.world.WorldFile.World.BooleanRow result = new org.worldengine.world.WorldFile.World.BooleanRow(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cells_ = cells_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.BooleanRow) {
            return mergeFrom((org.worldengine.world.WorldFile.World.BooleanRow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.BooleanRow other) {
          if (other == org.worldengine.world.WorldFile.World.BooleanRow.getDefaultInstance()) return this;
          if (!other.cells_.isEmpty()) {
            if (cells_.isEmpty()) {
              cells_ = other.cells_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCellsIsMutable();
              cells_.addAll(other.cells_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.BooleanRow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.BooleanRow) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated bool cells = 1;
        private java.util.List<java.lang.Boolean> cells_ = java.util.Collections.emptyList();
        private void ensureCellsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = new java.util.ArrayList<java.lang.Boolean>(cells_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated bool cells = 1;</code>
         */
        public java.util.List<java.lang.Boolean>
            getCellsList() {
          return java.util.Collections.unmodifiableList(cells_);
        }
        /**
         * <code>repeated bool cells = 1;</code>
         */
        public int getCellsCount() {
          return cells_.size();
        }
        /**
         * <code>repeated bool cells = 1;</code>
         */
        public boolean getCells(int index) {
          return cells_.get(index);
        }
        /**
         * <code>repeated bool cells = 1;</code>
         */
        public Builder setCells(
            int index, boolean value) {
          ensureCellsIsMutable();
          cells_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool cells = 1;</code>
         */
        public Builder addCells(boolean value) {
          ensureCellsIsMutable();
          cells_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool cells = 1;</code>
         */
        public Builder addAllCells(
            java.lang.Iterable<? extends java.lang.Boolean> values) {
          ensureCellsIsMutable();
          super.addAll(values, cells_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool cells = 1;</code>
         */
        public Builder clearCells() {
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:World.World.BooleanRow)
      }

      static {
        defaultInstance = new BooleanRow(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.BooleanRow)
    }

    public interface IntegerRowOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated int32 cells = 1;
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      java.util.List<java.lang.Integer> getCellsList();
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      int getCellsCount();
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      int getCells(int index);
    }
    /**
     * Protobuf type {@code World.World.IntegerRow}
     */
    public static final class IntegerRow extends
        com.google.protobuf.GeneratedMessage
        implements IntegerRowOrBuilder {
      // Use IntegerRow.newBuilder() to construct.
      private IntegerRow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private IntegerRow(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final IntegerRow defaultInstance;
      public static IntegerRow getDefaultInstance() {
        return defaultInstance;
      }

      public IntegerRow getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private IntegerRow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  cells_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                cells_.add(input.readInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                  cells_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cells_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_IntegerRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_IntegerRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.IntegerRow.class, org.worldengine.world.WorldFile.World.IntegerRow.Builder.class);
      }

      public static com.google.protobuf.Parser<IntegerRow> PARSER =
          new com.google.protobuf.AbstractParser<IntegerRow>() {
        public IntegerRow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new IntegerRow(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<IntegerRow> getParserForType() {
        return PARSER;
      }

      // repeated int32 cells = 1;
      public static final int CELLS_FIELD_NUMBER = 1;
      private java.util.List<java.lang.Integer> cells_;
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getCellsList() {
        return cells_;
      }
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      public int getCellsCount() {
        return cells_.size();
      }
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      public int getCells(int index) {
        return cells_.get(index);
      }

      private void initFields() {
        cells_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < cells_.size(); i++) {
          output.writeInt32(1, cells_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < cells_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(cells_.get(i));
          }
          size += dataSize;
          size += 1 * getCellsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.IntegerRow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.IntegerRow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.IntegerRow prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.IntegerRow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.IntegerRowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_IntegerRow_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_IntegerRow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.IntegerRow.class, org.worldengine.world.WorldFile.World.IntegerRow.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.IntegerRow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_IntegerRow_descriptor;
        }

        public org.worldengine.world.WorldFile.World.IntegerRow getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.IntegerRow.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.IntegerRow build() {
          org.worldengine.world.WorldFile.World.IntegerRow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.IntegerRow buildPartial() {
          org.worldengine.world.WorldFile.World.IntegerRow result = new org.worldengine.world.WorldFile.World.IntegerRow(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cells_ = cells_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.IntegerRow) {
            return mergeFrom((org.worldengine.world.WorldFile.World.IntegerRow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.IntegerRow other) {
          if (other == org.worldengine.world.WorldFile.World.IntegerRow.getDefaultInstance()) return this;
          if (!other.cells_.isEmpty()) {
            if (cells_.isEmpty()) {
              cells_ = other.cells_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCellsIsMutable();
              cells_.addAll(other.cells_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.IntegerRow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.IntegerRow) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated int32 cells = 1;
        private java.util.List<java.lang.Integer> cells_ = java.util.Collections.emptyList();
        private void ensureCellsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = new java.util.ArrayList<java.lang.Integer>(cells_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public java.util.List<java.lang.Integer>
            getCellsList() {
          return java.util.Collections.unmodifiableList(cells_);
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public int getCellsCount() {
          return cells_.size();
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public int getCells(int index) {
          return cells_.get(index);
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public Builder setCells(
            int index, int value) {
          ensureCellsIsMutable();
          cells_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public Builder addCells(int value) {
          ensureCellsIsMutable();
          cells_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public Builder addAllCells(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCellsIsMutable();
          super.addAll(values, cells_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public Builder clearCells() {
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:World.World.IntegerRow)
      }

      static {
        defaultInstance = new IntegerRow(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.IntegerRow)
    }

    public interface ByteRowOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated int32 cells = 1;
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      java.util.List<java.lang.Integer> getCellsList();
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      int getCellsCount();
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      int getCells(int index);
    }
    /**
     * Protobuf type {@code World.World.ByteRow}
     */
    public static final class ByteRow extends
        com.google.protobuf.GeneratedMessage
        implements ByteRowOrBuilder {
      // Use ByteRow.newBuilder() to construct.
      private ByteRow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ByteRow(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ByteRow defaultInstance;
      public static ByteRow getDefaultInstance() {
        return defaultInstance;
      }

      public ByteRow getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ByteRow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  cells_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                cells_.add(input.readInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                  cells_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cells_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_ByteRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_ByteRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.ByteRow.class, org.worldengine.world.WorldFile.World.ByteRow.Builder.class);
      }

      public static com.google.protobuf.Parser<ByteRow> PARSER =
          new com.google.protobuf.AbstractParser<ByteRow>() {
        public ByteRow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ByteRow(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ByteRow> getParserForType() {
        return PARSER;
      }

      // repeated int32 cells = 1;
      public static final int CELLS_FIELD_NUMBER = 1;
      private java.util.List<java.lang.Integer> cells_;
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getCellsList() {
        return cells_;
      }
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      public int getCellsCount() {
        return cells_.size();
      }
      /**
       * <code>repeated int32 cells = 1;</code>
       */
      public int getCells(int index) {
        return cells_.get(index);
      }

      private void initFields() {
        cells_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < cells_.size(); i++) {
          output.writeInt32(1, cells_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < cells_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(cells_.get(i));
          }
          size += dataSize;
          size += 1 * getCellsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.ByteRow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.ByteRow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.ByteRow prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.ByteRow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.ByteRowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_ByteRow_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_ByteRow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.ByteRow.class, org.worldengine.world.WorldFile.World.ByteRow.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.ByteRow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_ByteRow_descriptor;
        }

        public org.worldengine.world.WorldFile.World.ByteRow getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.ByteRow.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.ByteRow build() {
          org.worldengine.world.WorldFile.World.ByteRow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.ByteRow buildPartial() {
          org.worldengine.world.WorldFile.World.ByteRow result = new org.worldengine.world.WorldFile.World.ByteRow(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cells_ = cells_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.ByteRow) {
            return mergeFrom((org.worldengine.world.WorldFile.World.ByteRow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.ByteRow other) {
          if (other == org.worldengine.world.WorldFile.World.ByteRow.getDefaultInstance()) return this;
          if (!other.cells_.isEmpty()) {
            if (cells_.isEmpty()) {
              cells_ = other.cells_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCellsIsMutable();
              cells_.addAll(other.cells_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.ByteRow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.ByteRow) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated int32 cells = 1;
        private java.util.List<java.lang.Integer> cells_ = java.util.Collections.emptyList();
        private void ensureCellsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            cells_ = new java.util.ArrayList<java.lang.Integer>(cells_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public java.util.List<java.lang.Integer>
            getCellsList() {
          return java.util.Collections.unmodifiableList(cells_);
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public int getCellsCount() {
          return cells_.size();
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public int getCells(int index) {
          return cells_.get(index);
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public Builder setCells(
            int index, int value) {
          ensureCellsIsMutable();
          cells_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public Builder addCells(int value) {
          ensureCellsIsMutable();
          cells_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public Builder addAllCells(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCellsIsMutable();
          super.addAll(values, cells_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cells = 1;</code>
         */
        public Builder clearCells() {
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:World.World.ByteRow)
      }

      static {
        defaultInstance = new ByteRow(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.ByteRow)
    }

    public interface DoubleMatrixOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated .World.World.DoubleRow rows = 1;
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> 
          getRowsList();
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      org.worldengine.world.WorldFile.World.DoubleRow getRows(int index);
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      int getRowsCount();
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> 
          getRowsOrBuilderList();
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      org.worldengine.world.WorldFile.World.DoubleRowOrBuilder getRowsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code World.World.DoubleMatrix}
     */
    public static final class DoubleMatrix extends
        com.google.protobuf.GeneratedMessage
        implements DoubleMatrixOrBuilder {
      // Use DoubleMatrix.newBuilder() to construct.
      private DoubleMatrix(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DoubleMatrix(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DoubleMatrix defaultInstance;
      public static DoubleMatrix getDefaultInstance() {
        return defaultInstance;
      }

      public DoubleMatrix getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DoubleMatrix(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  rows_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.DoubleRow>();
                  mutable_bitField0_ |= 0x00000001;
                }
                rows_.add(input.readMessage(org.worldengine.world.WorldFile.World.DoubleRow.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrix_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.DoubleMatrix.class, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder.class);
      }

      public static com.google.protobuf.Parser<DoubleMatrix> PARSER =
          new com.google.protobuf.AbstractParser<DoubleMatrix>() {
        public DoubleMatrix parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DoubleMatrix(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DoubleMatrix> getParserForType() {
        return PARSER;
      }

      // repeated .World.World.DoubleRow rows = 1;
      public static final int ROWS_FIELD_NUMBER = 1;
      private java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> rows_;
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      public java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> getRowsList() {
        return rows_;
      }
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      public java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> 
          getRowsOrBuilderList() {
        return rows_;
      }
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      public int getRowsCount() {
        return rows_.size();
      }
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleRow getRows(int index) {
        return rows_.get(index);
      }
      /**
       * <code>repeated .World.World.DoubleRow rows = 1;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleRowOrBuilder getRowsOrBuilder(
          int index) {
        return rows_.get(index);
      }

      private void initFields() {
        rows_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < rows_.size(); i++) {
          output.writeMessage(1, rows_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < rows_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, rows_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrix parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.DoubleMatrix prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.DoubleMatrix}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrix_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrix_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.DoubleMatrix.class, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getRowsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (rowsBuilder_ == null) {
            rows_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            rowsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrix_descriptor;
        }

        public org.worldengine.world.WorldFile.World.DoubleMatrix getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.DoubleMatrix build() {
          org.worldengine.world.WorldFile.World.DoubleMatrix result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.DoubleMatrix buildPartial() {
          org.worldengine.world.WorldFile.World.DoubleMatrix result = new org.worldengine.world.WorldFile.World.DoubleMatrix(this);
          int from_bitField0_ = bitField0_;
          if (rowsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              rows_ = java.util.Collections.unmodifiableList(rows_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.rows_ = rows_;
          } else {
            result.rows_ = rowsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.DoubleMatrix) {
            return mergeFrom((org.worldengine.world.WorldFile.World.DoubleMatrix)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.DoubleMatrix other) {
          if (other == org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) return this;
          if (rowsBuilder_ == null) {
            if (!other.rows_.isEmpty()) {
              if (rows_.isEmpty()) {
                rows_ = other.rows_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureRowsIsMutable();
                rows_.addAll(other.rows_);
              }
              onChanged();
            }
          } else {
            if (!other.rows_.isEmpty()) {
              if (rowsBuilder_.isEmpty()) {
                rowsBuilder_.dispose();
                rowsBuilder_ = null;
                rows_ = other.rows_;
                bitField0_ = (bitField0_ & ~0x00000001);
                rowsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getRowsFieldBuilder() : null;
              } else {
                rowsBuilder_.addAllMessages(other.rows_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.DoubleMatrix parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.DoubleMatrix) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated .World.World.DoubleRow rows = 1;
        private java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> rows_ =
          java.util.Collections.emptyList();
        private void ensureRowsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.DoubleRow>(rows_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.DoubleRow, org.worldengine.world.WorldFile.World.DoubleRow.Builder, org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> rowsBuilder_;

        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> getRowsList() {
          if (rowsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(rows_);
          } else {
            return rowsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public int getRowsCount() {
          if (rowsBuilder_ == null) {
            return rows_.size();
          } else {
            return rowsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRow getRows(int index) {
          if (rowsBuilder_ == null) {
            return rows_.get(index);
          } else {
            return rowsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder setRows(
            int index, org.worldengine.world.WorldFile.World.DoubleRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.set(index, value);
            onChanged();
          } else {
            rowsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder setRows(
            int index, org.worldengine.world.WorldFile.World.DoubleRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.set(index, builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder addRows(org.worldengine.world.WorldFile.World.DoubleRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.add(value);
            onChanged();
          } else {
            rowsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder addRows(
            int index, org.worldengine.world.WorldFile.World.DoubleRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.add(index, value);
            onChanged();
          } else {
            rowsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder addRows(
            org.worldengine.world.WorldFile.World.DoubleRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.add(builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder addRows(
            int index, org.worldengine.world.WorldFile.World.DoubleRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.add(index, builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder addAllRows(
            java.lang.Iterable<? extends org.worldengine.world.WorldFile.World.DoubleRow> values) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            super.addAll(values, rows_);
            onChanged();
          } else {
            rowsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder clearRows() {
          if (rowsBuilder_ == null) {
            rows_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            rowsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public Builder removeRows(int index) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.remove(index);
            onChanged();
          } else {
            rowsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRow.Builder getRowsBuilder(
            int index) {
          return getRowsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRowOrBuilder getRowsOrBuilder(
            int index) {
          if (rowsBuilder_ == null) {
            return rows_.get(index);  } else {
            return rowsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> 
             getRowsOrBuilderList() {
          if (rowsBuilder_ != null) {
            return rowsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(rows_);
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRow.Builder addRowsBuilder() {
          return getRowsFieldBuilder().addBuilder(
              org.worldengine.world.WorldFile.World.DoubleRow.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRow.Builder addRowsBuilder(
            int index) {
          return getRowsFieldBuilder().addBuilder(
              index, org.worldengine.world.WorldFile.World.DoubleRow.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 1;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.DoubleRow.Builder> 
             getRowsBuilderList() {
          return getRowsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.DoubleRow, org.worldengine.world.WorldFile.World.DoubleRow.Builder, org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> 
            getRowsFieldBuilder() {
          if (rowsBuilder_ == null) {
            rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.worldengine.world.WorldFile.World.DoubleRow, org.worldengine.world.WorldFile.World.DoubleRow.Builder, org.worldengine.world.WorldFile.World.DoubleRowOrBuilder>(
                    rows_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            rows_ = null;
          }
          return rowsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:World.World.DoubleMatrix)
      }

      static {
        defaultInstance = new DoubleMatrix(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.DoubleMatrix)
    }

    public interface BooleanMatrixOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated .World.World.BooleanRow rows = 1;
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      java.util.List<org.worldengine.world.WorldFile.World.BooleanRow> 
          getRowsList();
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      org.worldengine.world.WorldFile.World.BooleanRow getRows(int index);
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      int getRowsCount();
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      java.util.List<? extends org.worldengine.world.WorldFile.World.BooleanRowOrBuilder> 
          getRowsOrBuilderList();
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      org.worldengine.world.WorldFile.World.BooleanRowOrBuilder getRowsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code World.World.BooleanMatrix}
     */
    public static final class BooleanMatrix extends
        com.google.protobuf.GeneratedMessage
        implements BooleanMatrixOrBuilder {
      // Use BooleanMatrix.newBuilder() to construct.
      private BooleanMatrix(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BooleanMatrix(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BooleanMatrix defaultInstance;
      public static BooleanMatrix getDefaultInstance() {
        return defaultInstance;
      }

      public BooleanMatrix getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BooleanMatrix(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  rows_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.BooleanRow>();
                  mutable_bitField0_ |= 0x00000001;
                }
                rows_.add(input.readMessage(org.worldengine.world.WorldFile.World.BooleanRow.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_BooleanMatrix_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_BooleanMatrix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.BooleanMatrix.class, org.worldengine.world.WorldFile.World.BooleanMatrix.Builder.class);
      }

      public static com.google.protobuf.Parser<BooleanMatrix> PARSER =
          new com.google.protobuf.AbstractParser<BooleanMatrix>() {
        public BooleanMatrix parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BooleanMatrix(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BooleanMatrix> getParserForType() {
        return PARSER;
      }

      // repeated .World.World.BooleanRow rows = 1;
      public static final int ROWS_FIELD_NUMBER = 1;
      private java.util.List<org.worldengine.world.WorldFile.World.BooleanRow> rows_;
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      public java.util.List<org.worldengine.world.WorldFile.World.BooleanRow> getRowsList() {
        return rows_;
      }
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      public java.util.List<? extends org.worldengine.world.WorldFile.World.BooleanRowOrBuilder> 
          getRowsOrBuilderList() {
        return rows_;
      }
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      public int getRowsCount() {
        return rows_.size();
      }
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      public org.worldengine.world.WorldFile.World.BooleanRow getRows(int index) {
        return rows_.get(index);
      }
      /**
       * <code>repeated .World.World.BooleanRow rows = 1;</code>
       */
      public org.worldengine.world.WorldFile.World.BooleanRowOrBuilder getRowsOrBuilder(
          int index) {
        return rows_.get(index);
      }

      private void initFields() {
        rows_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < rows_.size(); i++) {
          output.writeMessage(1, rows_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < rows_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, rows_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.BooleanMatrix parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.BooleanMatrix prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.BooleanMatrix}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.BooleanMatrixOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_BooleanMatrix_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_BooleanMatrix_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.BooleanMatrix.class, org.worldengine.world.WorldFile.World.BooleanMatrix.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.BooleanMatrix.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getRowsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (rowsBuilder_ == null) {
            rows_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            rowsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_BooleanMatrix_descriptor;
        }

        public org.worldengine.world.WorldFile.World.BooleanMatrix getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.BooleanMatrix.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.BooleanMatrix build() {
          org.worldengine.world.WorldFile.World.BooleanMatrix result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.BooleanMatrix buildPartial() {
          org.worldengine.world.WorldFile.World.BooleanMatrix result = new org.worldengine.world.WorldFile.World.BooleanMatrix(this);
          int from_bitField0_ = bitField0_;
          if (rowsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              rows_ = java.util.Collections.unmodifiableList(rows_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.rows_ = rows_;
          } else {
            result.rows_ = rowsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.BooleanMatrix) {
            return mergeFrom((org.worldengine.world.WorldFile.World.BooleanMatrix)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.BooleanMatrix other) {
          if (other == org.worldengine.world.WorldFile.World.BooleanMatrix.getDefaultInstance()) return this;
          if (rowsBuilder_ == null) {
            if (!other.rows_.isEmpty()) {
              if (rows_.isEmpty()) {
                rows_ = other.rows_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureRowsIsMutable();
                rows_.addAll(other.rows_);
              }
              onChanged();
            }
          } else {
            if (!other.rows_.isEmpty()) {
              if (rowsBuilder_.isEmpty()) {
                rowsBuilder_.dispose();
                rowsBuilder_ = null;
                rows_ = other.rows_;
                bitField0_ = (bitField0_ & ~0x00000001);
                rowsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getRowsFieldBuilder() : null;
              } else {
                rowsBuilder_.addAllMessages(other.rows_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.BooleanMatrix parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.BooleanMatrix) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated .World.World.BooleanRow rows = 1;
        private java.util.List<org.worldengine.world.WorldFile.World.BooleanRow> rows_ =
          java.util.Collections.emptyList();
        private void ensureRowsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.BooleanRow>(rows_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.BooleanRow, org.worldengine.world.WorldFile.World.BooleanRow.Builder, org.worldengine.world.WorldFile.World.BooleanRowOrBuilder> rowsBuilder_;

        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.BooleanRow> getRowsList() {
          if (rowsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(rows_);
          } else {
            return rowsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public int getRowsCount() {
          if (rowsBuilder_ == null) {
            return rows_.size();
          } else {
            return rowsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.BooleanRow getRows(int index) {
          if (rowsBuilder_ == null) {
            return rows_.get(index);
          } else {
            return rowsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder setRows(
            int index, org.worldengine.world.WorldFile.World.BooleanRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.set(index, value);
            onChanged();
          } else {
            rowsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder setRows(
            int index, org.worldengine.world.WorldFile.World.BooleanRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.set(index, builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder addRows(org.worldengine.world.WorldFile.World.BooleanRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.add(value);
            onChanged();
          } else {
            rowsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder addRows(
            int index, org.worldengine.world.WorldFile.World.BooleanRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.add(index, value);
            onChanged();
          } else {
            rowsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder addRows(
            org.worldengine.world.WorldFile.World.BooleanRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.add(builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder addRows(
            int index, org.worldengine.world.WorldFile.World.BooleanRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.add(index, builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder addAllRows(
            java.lang.Iterable<? extends org.worldengine.world.WorldFile.World.BooleanRow> values) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            super.addAll(values, rows_);
            onChanged();
          } else {
            rowsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder clearRows() {
          if (rowsBuilder_ == null) {
            rows_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            rowsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public Builder removeRows(int index) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.remove(index);
            onChanged();
          } else {
            rowsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.BooleanRow.Builder getRowsBuilder(
            int index) {
          return getRowsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.BooleanRowOrBuilder getRowsOrBuilder(
            int index) {
          if (rowsBuilder_ == null) {
            return rows_.get(index);  } else {
            return rowsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public java.util.List<? extends org.worldengine.world.WorldFile.World.BooleanRowOrBuilder> 
             getRowsOrBuilderList() {
          if (rowsBuilder_ != null) {
            return rowsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(rows_);
          }
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.BooleanRow.Builder addRowsBuilder() {
          return getRowsFieldBuilder().addBuilder(
              org.worldengine.world.WorldFile.World.BooleanRow.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.BooleanRow.Builder addRowsBuilder(
            int index) {
          return getRowsFieldBuilder().addBuilder(
              index, org.worldengine.world.WorldFile.World.BooleanRow.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.BooleanRow rows = 1;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.BooleanRow.Builder> 
             getRowsBuilderList() {
          return getRowsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.BooleanRow, org.worldengine.world.WorldFile.World.BooleanRow.Builder, org.worldengine.world.WorldFile.World.BooleanRowOrBuilder> 
            getRowsFieldBuilder() {
          if (rowsBuilder_ == null) {
            rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.worldengine.world.WorldFile.World.BooleanRow, org.worldengine.world.WorldFile.World.BooleanRow.Builder, org.worldengine.world.WorldFile.World.BooleanRowOrBuilder>(
                    rows_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            rows_ = null;
          }
          return rowsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:World.World.BooleanMatrix)
      }

      static {
        defaultInstance = new BooleanMatrix(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.BooleanMatrix)
    }

    public interface IntegerMatrixOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated .World.World.IntegerRow rows = 1;
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      java.util.List<org.worldengine.world.WorldFile.World.IntegerRow> 
          getRowsList();
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      org.worldengine.world.WorldFile.World.IntegerRow getRows(int index);
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      int getRowsCount();
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      java.util.List<? extends org.worldengine.world.WorldFile.World.IntegerRowOrBuilder> 
          getRowsOrBuilderList();
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      org.worldengine.world.WorldFile.World.IntegerRowOrBuilder getRowsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code World.World.IntegerMatrix}
     */
    public static final class IntegerMatrix extends
        com.google.protobuf.GeneratedMessage
        implements IntegerMatrixOrBuilder {
      // Use IntegerMatrix.newBuilder() to construct.
      private IntegerMatrix(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private IntegerMatrix(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final IntegerMatrix defaultInstance;
      public static IntegerMatrix getDefaultInstance() {
        return defaultInstance;
      }

      public IntegerMatrix getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private IntegerMatrix(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  rows_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.IntegerRow>();
                  mutable_bitField0_ |= 0x00000001;
                }
                rows_.add(input.readMessage(org.worldengine.world.WorldFile.World.IntegerRow.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_IntegerMatrix_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_IntegerMatrix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.IntegerMatrix.class, org.worldengine.world.WorldFile.World.IntegerMatrix.Builder.class);
      }

      public static com.google.protobuf.Parser<IntegerMatrix> PARSER =
          new com.google.protobuf.AbstractParser<IntegerMatrix>() {
        public IntegerMatrix parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new IntegerMatrix(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<IntegerMatrix> getParserForType() {
        return PARSER;
      }

      // repeated .World.World.IntegerRow rows = 1;
      public static final int ROWS_FIELD_NUMBER = 1;
      private java.util.List<org.worldengine.world.WorldFile.World.IntegerRow> rows_;
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      public java.util.List<org.worldengine.world.WorldFile.World.IntegerRow> getRowsList() {
        return rows_;
      }
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      public java.util.List<? extends org.worldengine.world.WorldFile.World.IntegerRowOrBuilder> 
          getRowsOrBuilderList() {
        return rows_;
      }
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      public int getRowsCount() {
        return rows_.size();
      }
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      public org.worldengine.world.WorldFile.World.IntegerRow getRows(int index) {
        return rows_.get(index);
      }
      /**
       * <code>repeated .World.World.IntegerRow rows = 1;</code>
       */
      public org.worldengine.world.WorldFile.World.IntegerRowOrBuilder getRowsOrBuilder(
          int index) {
        return rows_.get(index);
      }

      private void initFields() {
        rows_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < rows_.size(); i++) {
          output.writeMessage(1, rows_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < rows_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, rows_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.IntegerMatrix parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.IntegerMatrix prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.IntegerMatrix}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_IntegerMatrix_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_IntegerMatrix_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.IntegerMatrix.class, org.worldengine.world.WorldFile.World.IntegerMatrix.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.IntegerMatrix.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getRowsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (rowsBuilder_ == null) {
            rows_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            rowsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_IntegerMatrix_descriptor;
        }

        public org.worldengine.world.WorldFile.World.IntegerMatrix getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.IntegerMatrix build() {
          org.worldengine.world.WorldFile.World.IntegerMatrix result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.IntegerMatrix buildPartial() {
          org.worldengine.world.WorldFile.World.IntegerMatrix result = new org.worldengine.world.WorldFile.World.IntegerMatrix(this);
          int from_bitField0_ = bitField0_;
          if (rowsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              rows_ = java.util.Collections.unmodifiableList(rows_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.rows_ = rows_;
          } else {
            result.rows_ = rowsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.IntegerMatrix) {
            return mergeFrom((org.worldengine.world.WorldFile.World.IntegerMatrix)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.IntegerMatrix other) {
          if (other == org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance()) return this;
          if (rowsBuilder_ == null) {
            if (!other.rows_.isEmpty()) {
              if (rows_.isEmpty()) {
                rows_ = other.rows_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureRowsIsMutable();
                rows_.addAll(other.rows_);
              }
              onChanged();
            }
          } else {
            if (!other.rows_.isEmpty()) {
              if (rowsBuilder_.isEmpty()) {
                rowsBuilder_.dispose();
                rowsBuilder_ = null;
                rows_ = other.rows_;
                bitField0_ = (bitField0_ & ~0x00000001);
                rowsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getRowsFieldBuilder() : null;
              } else {
                rowsBuilder_.addAllMessages(other.rows_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.IntegerMatrix parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.IntegerMatrix) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated .World.World.IntegerRow rows = 1;
        private java.util.List<org.worldengine.world.WorldFile.World.IntegerRow> rows_ =
          java.util.Collections.emptyList();
        private void ensureRowsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.IntegerRow>(rows_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.IntegerRow, org.worldengine.world.WorldFile.World.IntegerRow.Builder, org.worldengine.world.WorldFile.World.IntegerRowOrBuilder> rowsBuilder_;

        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.IntegerRow> getRowsList() {
          if (rowsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(rows_);
          } else {
            return rowsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public int getRowsCount() {
          if (rowsBuilder_ == null) {
            return rows_.size();
          } else {
            return rowsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.IntegerRow getRows(int index) {
          if (rowsBuilder_ == null) {
            return rows_.get(index);
          } else {
            return rowsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder setRows(
            int index, org.worldengine.world.WorldFile.World.IntegerRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.set(index, value);
            onChanged();
          } else {
            rowsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder setRows(
            int index, org.worldengine.world.WorldFile.World.IntegerRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.set(index, builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder addRows(org.worldengine.world.WorldFile.World.IntegerRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.add(value);
            onChanged();
          } else {
            rowsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder addRows(
            int index, org.worldengine.world.WorldFile.World.IntegerRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.add(index, value);
            onChanged();
          } else {
            rowsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder addRows(
            org.worldengine.world.WorldFile.World.IntegerRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.add(builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder addRows(
            int index, org.worldengine.world.WorldFile.World.IntegerRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.add(index, builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder addAllRows(
            java.lang.Iterable<? extends org.worldengine.world.WorldFile.World.IntegerRow> values) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            super.addAll(values, rows_);
            onChanged();
          } else {
            rowsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder clearRows() {
          if (rowsBuilder_ == null) {
            rows_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            rowsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public Builder removeRows(int index) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.remove(index);
            onChanged();
          } else {
            rowsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.IntegerRow.Builder getRowsBuilder(
            int index) {
          return getRowsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.IntegerRowOrBuilder getRowsOrBuilder(
            int index) {
          if (rowsBuilder_ == null) {
            return rows_.get(index);  } else {
            return rowsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public java.util.List<? extends org.worldengine.world.WorldFile.World.IntegerRowOrBuilder> 
             getRowsOrBuilderList() {
          if (rowsBuilder_ != null) {
            return rowsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(rows_);
          }
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.IntegerRow.Builder addRowsBuilder() {
          return getRowsFieldBuilder().addBuilder(
              org.worldengine.world.WorldFile.World.IntegerRow.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.IntegerRow.Builder addRowsBuilder(
            int index) {
          return getRowsFieldBuilder().addBuilder(
              index, org.worldengine.world.WorldFile.World.IntegerRow.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.IntegerRow rows = 1;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.IntegerRow.Builder> 
             getRowsBuilderList() {
          return getRowsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.IntegerRow, org.worldengine.world.WorldFile.World.IntegerRow.Builder, org.worldengine.world.WorldFile.World.IntegerRowOrBuilder> 
            getRowsFieldBuilder() {
          if (rowsBuilder_ == null) {
            rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.worldengine.world.WorldFile.World.IntegerRow, org.worldengine.world.WorldFile.World.IntegerRow.Builder, org.worldengine.world.WorldFile.World.IntegerRowOrBuilder>(
                    rows_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            rows_ = null;
          }
          return rowsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:World.World.IntegerMatrix)
      }

      static {
        defaultInstance = new IntegerMatrix(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.IntegerMatrix)
    }

    public interface DoubleQuantileOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 key = 1;
      /**
       * <code>required int32 key = 1;</code>
       */
      boolean hasKey();
      /**
       * <code>required int32 key = 1;</code>
       */
      int getKey();

      // required double value = 2;
      /**
       * <code>required double value = 2;</code>
       */
      boolean hasValue();
      /**
       * <code>required double value = 2;</code>
       */
      double getValue();
    }
    /**
     * Protobuf type {@code World.World.DoubleQuantile}
     */
    public static final class DoubleQuantile extends
        com.google.protobuf.GeneratedMessage
        implements DoubleQuantileOrBuilder {
      // Use DoubleQuantile.newBuilder() to construct.
      private DoubleQuantile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DoubleQuantile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DoubleQuantile defaultInstance;
      public static DoubleQuantile getDefaultInstance() {
        return defaultInstance;
      }

      public DoubleQuantile getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DoubleQuantile(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                key_ = input.readInt32();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                value_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_DoubleQuantile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_DoubleQuantile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.DoubleQuantile.class, org.worldengine.world.WorldFile.World.DoubleQuantile.Builder.class);
      }

      public static com.google.protobuf.Parser<DoubleQuantile> PARSER =
          new com.google.protobuf.AbstractParser<DoubleQuantile>() {
        public DoubleQuantile parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DoubleQuantile(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DoubleQuantile> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private int key_;
      /**
       * <code>required int32 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 key = 1;</code>
       */
      public int getKey() {
        return key_;
      }

      // required double value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private double value_;
      /**
       * <code>required double value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double value = 2;</code>
       */
      public double getValue() {
        return value_;
      }

      private void initFields() {
        key_ = 0;
        value_ = 0D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, key_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, key_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleQuantile parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.DoubleQuantile prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.DoubleQuantile}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleQuantile_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleQuantile_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.DoubleQuantile.class, org.worldengine.world.WorldFile.World.DoubleQuantile.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.DoubleQuantile.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          key_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleQuantile_descriptor;
        }

        public org.worldengine.world.WorldFile.World.DoubleQuantile getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.DoubleQuantile.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.DoubleQuantile build() {
          org.worldengine.world.WorldFile.World.DoubleQuantile result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.DoubleQuantile buildPartial() {
          org.worldengine.world.WorldFile.World.DoubleQuantile result = new org.worldengine.world.WorldFile.World.DoubleQuantile(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.DoubleQuantile) {
            return mergeFrom((org.worldengine.world.WorldFile.World.DoubleQuantile)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.DoubleQuantile other) {
          if (other == org.worldengine.world.WorldFile.World.DoubleQuantile.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.DoubleQuantile parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.DoubleQuantile) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 key = 1;
        private int key_ ;
        /**
         * <code>required int32 key = 1;</code>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 key = 1;</code>
         */
        public int getKey() {
          return key_;
        }
        /**
         * <code>required int32 key = 1;</code>
         */
        public Builder setKey(int value) {
          bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 key = 1;</code>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = 0;
          onChanged();
          return this;
        }

        // required double value = 2;
        private double value_ ;
        /**
         * <code>required double value = 2;</code>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double value = 2;</code>
         */
        public double getValue() {
          return value_;
        }
        /**
         * <code>required double value = 2;</code>
         */
        public Builder setValue(double value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double value = 2;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:World.World.DoubleQuantile)
      }

      static {
        defaultInstance = new DoubleQuantile(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.DoubleQuantile)
    }

    public interface DoubleMatrixWithQuantilesOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated .World.World.DoubleQuantile quantiles = 1;
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      java.util.List<org.worldengine.world.WorldFile.World.DoubleQuantile> 
          getQuantilesList();
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      org.worldengine.world.WorldFile.World.DoubleQuantile getQuantiles(int index);
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      int getQuantilesCount();
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder> 
          getQuantilesOrBuilderList();
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder getQuantilesOrBuilder(
          int index);

      // repeated .World.World.DoubleRow rows = 2;
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> 
          getRowsList();
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      org.worldengine.world.WorldFile.World.DoubleRow getRows(int index);
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      int getRowsCount();
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> 
          getRowsOrBuilderList();
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      org.worldengine.world.WorldFile.World.DoubleRowOrBuilder getRowsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code World.World.DoubleMatrixWithQuantiles}
     */
    public static final class DoubleMatrixWithQuantiles extends
        com.google.protobuf.GeneratedMessage
        implements DoubleMatrixWithQuantilesOrBuilder {
      // Use DoubleMatrixWithQuantiles.newBuilder() to construct.
      private DoubleMatrixWithQuantiles(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DoubleMatrixWithQuantiles(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DoubleMatrixWithQuantiles defaultInstance;
      public static DoubleMatrixWithQuantiles getDefaultInstance() {
        return defaultInstance;
      }

      public DoubleMatrixWithQuantiles getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DoubleMatrixWithQuantiles(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  quantiles_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.DoubleQuantile>();
                  mutable_bitField0_ |= 0x00000001;
                }
                quantiles_.add(input.readMessage(org.worldengine.world.WorldFile.World.DoubleQuantile.PARSER, extensionRegistry));
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  rows_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.DoubleRow>();
                  mutable_bitField0_ |= 0x00000002;
                }
                rows_.add(input.readMessage(org.worldengine.world.WorldFile.World.DoubleRow.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            quantiles_ = java.util.Collections.unmodifiableList(quantiles_);
          }
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrixWithQuantiles_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrixWithQuantiles_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.class, org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.Builder.class);
      }

      public static com.google.protobuf.Parser<DoubleMatrixWithQuantiles> PARSER =
          new com.google.protobuf.AbstractParser<DoubleMatrixWithQuantiles>() {
        public DoubleMatrixWithQuantiles parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DoubleMatrixWithQuantiles(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DoubleMatrixWithQuantiles> getParserForType() {
        return PARSER;
      }

      // repeated .World.World.DoubleQuantile quantiles = 1;
      public static final int QUANTILES_FIELD_NUMBER = 1;
      private java.util.List<org.worldengine.world.WorldFile.World.DoubleQuantile> quantiles_;
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      public java.util.List<org.worldengine.world.WorldFile.World.DoubleQuantile> getQuantilesList() {
        return quantiles_;
      }
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      public java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder> 
          getQuantilesOrBuilderList() {
        return quantiles_;
      }
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      public int getQuantilesCount() {
        return quantiles_.size();
      }
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleQuantile getQuantiles(int index) {
        return quantiles_.get(index);
      }
      /**
       * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder getQuantilesOrBuilder(
          int index) {
        return quantiles_.get(index);
      }

      // repeated .World.World.DoubleRow rows = 2;
      public static final int ROWS_FIELD_NUMBER = 2;
      private java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> rows_;
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      public java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> getRowsList() {
        return rows_;
      }
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      public java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> 
          getRowsOrBuilderList() {
        return rows_;
      }
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      public int getRowsCount() {
        return rows_.size();
      }
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleRow getRows(int index) {
        return rows_.get(index);
      }
      /**
       * <code>repeated .World.World.DoubleRow rows = 2;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleRowOrBuilder getRowsOrBuilder(
          int index) {
        return rows_.get(index);
      }

      private void initFields() {
        quantiles_ = java.util.Collections.emptyList();
        rows_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        for (int i = 0; i < getQuantilesCount(); i++) {
          if (!getQuantiles(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < quantiles_.size(); i++) {
          output.writeMessage(1, quantiles_.get(i));
        }
        for (int i = 0; i < rows_.size(); i++) {
          output.writeMessage(2, rows_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < quantiles_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, quantiles_.get(i));
        }
        for (int i = 0; i < rows_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, rows_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.DoubleMatrixWithQuantiles}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantilesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrixWithQuantiles_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrixWithQuantiles_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.class, org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getQuantilesFieldBuilder();
            getRowsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (quantilesBuilder_ == null) {
            quantiles_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            quantilesBuilder_.clear();
          }
          if (rowsBuilder_ == null) {
            rows_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            rowsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_DoubleMatrixWithQuantiles_descriptor;
        }

        public org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles build() {
          org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles buildPartial() {
          org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles result = new org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles(this);
          int from_bitField0_ = bitField0_;
          if (quantilesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              quantiles_ = java.util.Collections.unmodifiableList(quantiles_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.quantiles_ = quantiles_;
          } else {
            result.quantiles_ = quantilesBuilder_.build();
          }
          if (rowsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              rows_ = java.util.Collections.unmodifiableList(rows_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.rows_ = rows_;
          } else {
            result.rows_ = rowsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles) {
            return mergeFrom((org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles other) {
          if (other == org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.getDefaultInstance()) return this;
          if (quantilesBuilder_ == null) {
            if (!other.quantiles_.isEmpty()) {
              if (quantiles_.isEmpty()) {
                quantiles_ = other.quantiles_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureQuantilesIsMutable();
                quantiles_.addAll(other.quantiles_);
              }
              onChanged();
            }
          } else {
            if (!other.quantiles_.isEmpty()) {
              if (quantilesBuilder_.isEmpty()) {
                quantilesBuilder_.dispose();
                quantilesBuilder_ = null;
                quantiles_ = other.quantiles_;
                bitField0_ = (bitField0_ & ~0x00000001);
                quantilesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getQuantilesFieldBuilder() : null;
              } else {
                quantilesBuilder_.addAllMessages(other.quantiles_);
              }
            }
          }
          if (rowsBuilder_ == null) {
            if (!other.rows_.isEmpty()) {
              if (rows_.isEmpty()) {
                rows_ = other.rows_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureRowsIsMutable();
                rows_.addAll(other.rows_);
              }
              onChanged();
            }
          } else {
            if (!other.rows_.isEmpty()) {
              if (rowsBuilder_.isEmpty()) {
                rowsBuilder_.dispose();
                rowsBuilder_ = null;
                rows_ = other.rows_;
                bitField0_ = (bitField0_ & ~0x00000002);
                rowsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getRowsFieldBuilder() : null;
              } else {
                rowsBuilder_.addAllMessages(other.rows_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getQuantilesCount(); i++) {
            if (!getQuantiles(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated .World.World.DoubleQuantile quantiles = 1;
        private java.util.List<org.worldengine.world.WorldFile.World.DoubleQuantile> quantiles_ =
          java.util.Collections.emptyList();
        private void ensureQuantilesIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            quantiles_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.DoubleQuantile>(quantiles_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.DoubleQuantile, org.worldengine.world.WorldFile.World.DoubleQuantile.Builder, org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder> quantilesBuilder_;

        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.DoubleQuantile> getQuantilesList() {
          if (quantilesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(quantiles_);
          } else {
            return quantilesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public int getQuantilesCount() {
          if (quantilesBuilder_ == null) {
            return quantiles_.size();
          } else {
            return quantilesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleQuantile getQuantiles(int index) {
          if (quantilesBuilder_ == null) {
            return quantiles_.get(index);
          } else {
            return quantilesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder setQuantiles(
            int index, org.worldengine.world.WorldFile.World.DoubleQuantile value) {
          if (quantilesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureQuantilesIsMutable();
            quantiles_.set(index, value);
            onChanged();
          } else {
            quantilesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder setQuantiles(
            int index, org.worldengine.world.WorldFile.World.DoubleQuantile.Builder builderForValue) {
          if (quantilesBuilder_ == null) {
            ensureQuantilesIsMutable();
            quantiles_.set(index, builderForValue.build());
            onChanged();
          } else {
            quantilesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder addQuantiles(org.worldengine.world.WorldFile.World.DoubleQuantile value) {
          if (quantilesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureQuantilesIsMutable();
            quantiles_.add(value);
            onChanged();
          } else {
            quantilesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder addQuantiles(
            int index, org.worldengine.world.WorldFile.World.DoubleQuantile value) {
          if (quantilesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureQuantilesIsMutable();
            quantiles_.add(index, value);
            onChanged();
          } else {
            quantilesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder addQuantiles(
            org.worldengine.world.WorldFile.World.DoubleQuantile.Builder builderForValue) {
          if (quantilesBuilder_ == null) {
            ensureQuantilesIsMutable();
            quantiles_.add(builderForValue.build());
            onChanged();
          } else {
            quantilesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder addQuantiles(
            int index, org.worldengine.world.WorldFile.World.DoubleQuantile.Builder builderForValue) {
          if (quantilesBuilder_ == null) {
            ensureQuantilesIsMutable();
            quantiles_.add(index, builderForValue.build());
            onChanged();
          } else {
            quantilesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder addAllQuantiles(
            java.lang.Iterable<? extends org.worldengine.world.WorldFile.World.DoubleQuantile> values) {
          if (quantilesBuilder_ == null) {
            ensureQuantilesIsMutable();
            super.addAll(values, quantiles_);
            onChanged();
          } else {
            quantilesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder clearQuantiles() {
          if (quantilesBuilder_ == null) {
            quantiles_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            quantilesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public Builder removeQuantiles(int index) {
          if (quantilesBuilder_ == null) {
            ensureQuantilesIsMutable();
            quantiles_.remove(index);
            onChanged();
          } else {
            quantilesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleQuantile.Builder getQuantilesBuilder(
            int index) {
          return getQuantilesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder getQuantilesOrBuilder(
            int index) {
          if (quantilesBuilder_ == null) {
            return quantiles_.get(index);  } else {
            return quantilesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder> 
             getQuantilesOrBuilderList() {
          if (quantilesBuilder_ != null) {
            return quantilesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(quantiles_);
          }
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleQuantile.Builder addQuantilesBuilder() {
          return getQuantilesFieldBuilder().addBuilder(
              org.worldengine.world.WorldFile.World.DoubleQuantile.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleQuantile.Builder addQuantilesBuilder(
            int index) {
          return getQuantilesFieldBuilder().addBuilder(
              index, org.worldengine.world.WorldFile.World.DoubleQuantile.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.DoubleQuantile quantiles = 1;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.DoubleQuantile.Builder> 
             getQuantilesBuilderList() {
          return getQuantilesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.DoubleQuantile, org.worldengine.world.WorldFile.World.DoubleQuantile.Builder, org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder> 
            getQuantilesFieldBuilder() {
          if (quantilesBuilder_ == null) {
            quantilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.worldengine.world.WorldFile.World.DoubleQuantile, org.worldengine.world.WorldFile.World.DoubleQuantile.Builder, org.worldengine.world.WorldFile.World.DoubleQuantileOrBuilder>(
                    quantiles_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            quantiles_ = null;
          }
          return quantilesBuilder_;
        }

        // repeated .World.World.DoubleRow rows = 2;
        private java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> rows_ =
          java.util.Collections.emptyList();
        private void ensureRowsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            rows_ = new java.util.ArrayList<org.worldengine.world.WorldFile.World.DoubleRow>(rows_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.DoubleRow, org.worldengine.world.WorldFile.World.DoubleRow.Builder, org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> rowsBuilder_;

        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.DoubleRow> getRowsList() {
          if (rowsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(rows_);
          } else {
            return rowsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public int getRowsCount() {
          if (rowsBuilder_ == null) {
            return rows_.size();
          } else {
            return rowsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRow getRows(int index) {
          if (rowsBuilder_ == null) {
            return rows_.get(index);
          } else {
            return rowsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder setRows(
            int index, org.worldengine.world.WorldFile.World.DoubleRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.set(index, value);
            onChanged();
          } else {
            rowsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder setRows(
            int index, org.worldengine.world.WorldFile.World.DoubleRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.set(index, builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder addRows(org.worldengine.world.WorldFile.World.DoubleRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.add(value);
            onChanged();
          } else {
            rowsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder addRows(
            int index, org.worldengine.world.WorldFile.World.DoubleRow value) {
          if (rowsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRowsIsMutable();
            rows_.add(index, value);
            onChanged();
          } else {
            rowsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder addRows(
            org.worldengine.world.WorldFile.World.DoubleRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.add(builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder addRows(
            int index, org.worldengine.world.WorldFile.World.DoubleRow.Builder builderForValue) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.add(index, builderForValue.build());
            onChanged();
          } else {
            rowsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder addAllRows(
            java.lang.Iterable<? extends org.worldengine.world.WorldFile.World.DoubleRow> values) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            super.addAll(values, rows_);
            onChanged();
          } else {
            rowsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder clearRows() {
          if (rowsBuilder_ == null) {
            rows_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            rowsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public Builder removeRows(int index) {
          if (rowsBuilder_ == null) {
            ensureRowsIsMutable();
            rows_.remove(index);
            onChanged();
          } else {
            rowsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRow.Builder getRowsBuilder(
            int index) {
          return getRowsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRowOrBuilder getRowsOrBuilder(
            int index) {
          if (rowsBuilder_ == null) {
            return rows_.get(index);  } else {
            return rowsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public java.util.List<? extends org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> 
             getRowsOrBuilderList() {
          if (rowsBuilder_ != null) {
            return rowsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(rows_);
          }
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRow.Builder addRowsBuilder() {
          return getRowsFieldBuilder().addBuilder(
              org.worldengine.world.WorldFile.World.DoubleRow.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public org.worldengine.world.WorldFile.World.DoubleRow.Builder addRowsBuilder(
            int index) {
          return getRowsFieldBuilder().addBuilder(
              index, org.worldengine.world.WorldFile.World.DoubleRow.getDefaultInstance());
        }
        /**
         * <code>repeated .World.World.DoubleRow rows = 2;</code>
         */
        public java.util.List<org.worldengine.world.WorldFile.World.DoubleRow.Builder> 
             getRowsBuilderList() {
          return getRowsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.worldengine.world.WorldFile.World.DoubleRow, org.worldengine.world.WorldFile.World.DoubleRow.Builder, org.worldengine.world.WorldFile.World.DoubleRowOrBuilder> 
            getRowsFieldBuilder() {
          if (rowsBuilder_ == null) {
            rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.worldengine.world.WorldFile.World.DoubleRow, org.worldengine.world.WorldFile.World.DoubleRow.Builder, org.worldengine.world.WorldFile.World.DoubleRowOrBuilder>(
                    rows_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            rows_ = null;
          }
          return rowsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:World.World.DoubleMatrixWithQuantiles)
      }

      static {
        defaultInstance = new DoubleMatrixWithQuantiles(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.DoubleMatrixWithQuantiles)
    }

    public interface GenerationDataOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 seed = 1;
      /**
       * <code>optional int32 seed = 1;</code>
       */
      boolean hasSeed();
      /**
       * <code>optional int32 seed = 1;</code>
       */
      int getSeed();

      // optional int32 n_plates = 2;
      /**
       * <code>optional int32 n_plates = 2;</code>
       */
      boolean hasNPlates();
      /**
       * <code>optional int32 n_plates = 2;</code>
       */
      int getNPlates();

      // optional float ocean_level = 3;
      /**
       * <code>optional float ocean_level = 3;</code>
       */
      boolean hasOceanLevel();
      /**
       * <code>optional float ocean_level = 3;</code>
       */
      float getOceanLevel();

      // optional string step = 4;
      /**
       * <code>optional string step = 4;</code>
       */
      boolean hasStep();
      /**
       * <code>optional string step = 4;</code>
       */
      java.lang.String getStep();
      /**
       * <code>optional string step = 4;</code>
       */
      com.google.protobuf.ByteString
          getStepBytes();
    }
    /**
     * Protobuf type {@code World.World.GenerationData}
     */
    public static final class GenerationData extends
        com.google.protobuf.GeneratedMessage
        implements GenerationDataOrBuilder {
      // Use GenerationData.newBuilder() to construct.
      private GenerationData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private GenerationData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final GenerationData defaultInstance;
      public static GenerationData getDefaultInstance() {
        return defaultInstance;
      }

      public GenerationData getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private GenerationData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                seed_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                nPlates_ = input.readInt32();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                oceanLevel_ = input.readFloat();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                step_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_GenerationData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_GenerationData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.GenerationData.class, org.worldengine.world.WorldFile.World.GenerationData.Builder.class);
      }

      public static com.google.protobuf.Parser<GenerationData> PARSER =
          new com.google.protobuf.AbstractParser<GenerationData>() {
        public GenerationData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new GenerationData(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<GenerationData> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int32 seed = 1;
      public static final int SEED_FIELD_NUMBER = 1;
      private int seed_;
      /**
       * <code>optional int32 seed = 1;</code>
       */
      public boolean hasSeed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seed = 1;</code>
       */
      public int getSeed() {
        return seed_;
      }

      // optional int32 n_plates = 2;
      public static final int N_PLATES_FIELD_NUMBER = 2;
      private int nPlates_;
      /**
       * <code>optional int32 n_plates = 2;</code>
       */
      public boolean hasNPlates() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 n_plates = 2;</code>
       */
      public int getNPlates() {
        return nPlates_;
      }

      // optional float ocean_level = 3;
      public static final int OCEAN_LEVEL_FIELD_NUMBER = 3;
      private float oceanLevel_;
      /**
       * <code>optional float ocean_level = 3;</code>
       */
      public boolean hasOceanLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float ocean_level = 3;</code>
       */
      public float getOceanLevel() {
        return oceanLevel_;
      }

      // optional string step = 4;
      public static final int STEP_FIELD_NUMBER = 4;
      private java.lang.Object step_;
      /**
       * <code>optional string step = 4;</code>
       */
      public boolean hasStep() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string step = 4;</code>
       */
      public java.lang.String getStep() {
        java.lang.Object ref = step_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            step_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string step = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStepBytes() {
        java.lang.Object ref = step_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          step_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        seed_ = 0;
        nPlates_ = 0;
        oceanLevel_ = 0F;
        step_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, seed_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, nPlates_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, oceanLevel_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getStepBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, seed_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, nPlates_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, oceanLevel_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getStepBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.worldengine.world.WorldFile.World.GenerationData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.worldengine.world.WorldFile.World.GenerationData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.worldengine.world.WorldFile.World.GenerationData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code World.World.GenerationData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.worldengine.world.WorldFile.World.GenerationDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.worldengine.world.WorldFile.internal_static_World_World_GenerationData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.worldengine.world.WorldFile.internal_static_World_World_GenerationData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.worldengine.world.WorldFile.World.GenerationData.class, org.worldengine.world.WorldFile.World.GenerationData.Builder.class);
        }

        // Construct using org.worldengine.world.WorldFile.World.GenerationData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          seed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          nPlates_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          oceanLevel_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          step_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.worldengine.world.WorldFile.internal_static_World_World_GenerationData_descriptor;
        }

        public org.worldengine.world.WorldFile.World.GenerationData getDefaultInstanceForType() {
          return org.worldengine.world.WorldFile.World.GenerationData.getDefaultInstance();
        }

        public org.worldengine.world.WorldFile.World.GenerationData build() {
          org.worldengine.world.WorldFile.World.GenerationData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.worldengine.world.WorldFile.World.GenerationData buildPartial() {
          org.worldengine.world.WorldFile.World.GenerationData result = new org.worldengine.world.WorldFile.World.GenerationData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.seed_ = seed_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.nPlates_ = nPlates_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.oceanLevel_ = oceanLevel_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.step_ = step_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.worldengine.world.WorldFile.World.GenerationData) {
            return mergeFrom((org.worldengine.world.WorldFile.World.GenerationData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.worldengine.world.WorldFile.World.GenerationData other) {
          if (other == org.worldengine.world.WorldFile.World.GenerationData.getDefaultInstance()) return this;
          if (other.hasSeed()) {
            setSeed(other.getSeed());
          }
          if (other.hasNPlates()) {
            setNPlates(other.getNPlates());
          }
          if (other.hasOceanLevel()) {
            setOceanLevel(other.getOceanLevel());
          }
          if (other.hasStep()) {
            bitField0_ |= 0x00000008;
            step_ = other.step_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.worldengine.world.WorldFile.World.GenerationData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.worldengine.world.WorldFile.World.GenerationData) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int32 seed = 1;
        private int seed_ ;
        /**
         * <code>optional int32 seed = 1;</code>
         */
        public boolean hasSeed() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 seed = 1;</code>
         */
        public int getSeed() {
          return seed_;
        }
        /**
         * <code>optional int32 seed = 1;</code>
         */
        public Builder setSeed(int value) {
          bitField0_ |= 0x00000001;
          seed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 seed = 1;</code>
         */
        public Builder clearSeed() {
          bitField0_ = (bitField0_ & ~0x00000001);
          seed_ = 0;
          onChanged();
          return this;
        }

        // optional int32 n_plates = 2;
        private int nPlates_ ;
        /**
         * <code>optional int32 n_plates = 2;</code>
         */
        public boolean hasNPlates() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 n_plates = 2;</code>
         */
        public int getNPlates() {
          return nPlates_;
        }
        /**
         * <code>optional int32 n_plates = 2;</code>
         */
        public Builder setNPlates(int value) {
          bitField0_ |= 0x00000002;
          nPlates_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 n_plates = 2;</code>
         */
        public Builder clearNPlates() {
          bitField0_ = (bitField0_ & ~0x00000002);
          nPlates_ = 0;
          onChanged();
          return this;
        }

        // optional float ocean_level = 3;
        private float oceanLevel_ ;
        /**
         * <code>optional float ocean_level = 3;</code>
         */
        public boolean hasOceanLevel() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float ocean_level = 3;</code>
         */
        public float getOceanLevel() {
          return oceanLevel_;
        }
        /**
         * <code>optional float ocean_level = 3;</code>
         */
        public Builder setOceanLevel(float value) {
          bitField0_ |= 0x00000004;
          oceanLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float ocean_level = 3;</code>
         */
        public Builder clearOceanLevel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          oceanLevel_ = 0F;
          onChanged();
          return this;
        }

        // optional string step = 4;
        private java.lang.Object step_ = "";
        /**
         * <code>optional string step = 4;</code>
         */
        public boolean hasStep() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string step = 4;</code>
         */
        public java.lang.String getStep() {
          java.lang.Object ref = step_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            step_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string step = 4;</code>
         */
        public com.google.protobuf.ByteString
            getStepBytes() {
          java.lang.Object ref = step_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            step_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string step = 4;</code>
         */
        public Builder setStep(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          step_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string step = 4;</code>
         */
        public Builder clearStep() {
          bitField0_ = (bitField0_ & ~0x00000008);
          step_ = getDefaultInstance().getStep();
          onChanged();
          return this;
        }
        /**
         * <code>optional string step = 4;</code>
         */
        public Builder setStepBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          step_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:World.World.GenerationData)
      }

      static {
        defaultInstance = new GenerationData(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:World.World.GenerationData)
    }

    private int bitField0_;
    private int bitField1_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 width = 2;
    public static final int WIDTH_FIELD_NUMBER = 2;
    private int width_;
    /**
     * <code>required int32 width = 2;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 width = 2;</code>
     */
    public int getWidth() {
      return width_;
    }

    // required int32 height = 3;
    public static final int HEIGHT_FIELD_NUMBER = 3;
    private int height_;
    /**
     * <code>required int32 height = 3;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 height = 3;</code>
     */
    public int getHeight() {
      return height_;
    }

    // required .World.World.DoubleMatrix heightMapData = 4;
    public static final int HEIGHTMAPDATA_FIELD_NUMBER = 4;
    private org.worldengine.world.WorldFile.World.DoubleMatrix heightMapData_;
    /**
     * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
     */
    public boolean hasHeightMapData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getHeightMapData() {
      return heightMapData_;
    }
    /**
     * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getHeightMapDataOrBuilder() {
      return heightMapData_;
    }

    // required double heightMapTh_sea = 5;
    public static final int HEIGHTMAPTH_SEA_FIELD_NUMBER = 5;
    private double heightMapThSea_;
    /**
     * <code>required double heightMapTh_sea = 5;</code>
     */
    public boolean hasHeightMapThSea() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double heightMapTh_sea = 5;</code>
     */
    public double getHeightMapThSea() {
      return heightMapThSea_;
    }

    // required double heightMapTh_plain = 6;
    public static final int HEIGHTMAPTH_PLAIN_FIELD_NUMBER = 6;
    private double heightMapThPlain_;
    /**
     * <code>required double heightMapTh_plain = 6;</code>
     */
    public boolean hasHeightMapThPlain() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required double heightMapTh_plain = 6;</code>
     */
    public double getHeightMapThPlain() {
      return heightMapThPlain_;
    }

    // required double heightMapTh_hill = 7;
    public static final int HEIGHTMAPTH_HILL_FIELD_NUMBER = 7;
    private double heightMapThHill_;
    /**
     * <code>required double heightMapTh_hill = 7;</code>
     */
    public boolean hasHeightMapThHill() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required double heightMapTh_hill = 7;</code>
     */
    public double getHeightMapThHill() {
      return heightMapThHill_;
    }

    // required .World.World.IntegerMatrix plates = 30;
    public static final int PLATES_FIELD_NUMBER = 30;
    private org.worldengine.world.WorldFile.World.IntegerMatrix plates_;
    /**
     * <code>required .World.World.IntegerMatrix plates = 30;</code>
     *
     * <pre>
     * Plates
     * </pre>
     */
    public boolean hasPlates() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required .World.World.IntegerMatrix plates = 30;</code>
     *
     * <pre>
     * Plates
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.IntegerMatrix getPlates() {
      return plates_;
    }
    /**
     * <code>required .World.World.IntegerMatrix plates = 30;</code>
     *
     * <pre>
     * Plates
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder getPlatesOrBuilder() {
      return plates_;
    }

    // required .World.World.BooleanMatrix ocean = 8;
    public static final int OCEAN_FIELD_NUMBER = 8;
    private org.worldengine.world.WorldFile.World.BooleanMatrix ocean_;
    /**
     * <code>required .World.World.BooleanMatrix ocean = 8;</code>
     *
     * <pre>
     * Ocean
     * </pre>
     */
    public boolean hasOcean() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required .World.World.BooleanMatrix ocean = 8;</code>
     *
     * <pre>
     * Ocean
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.BooleanMatrix getOcean() {
      return ocean_;
    }
    /**
     * <code>required .World.World.BooleanMatrix ocean = 8;</code>
     *
     * <pre>
     * Ocean
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.BooleanMatrixOrBuilder getOceanOrBuilder() {
      return ocean_;
    }

    // required .World.World.DoubleMatrix sea_depth = 29;
    public static final int SEA_DEPTH_FIELD_NUMBER = 29;
    private org.worldengine.world.WorldFile.World.DoubleMatrix seaDepth_;
    /**
     * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
     */
    public boolean hasSeaDepth() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getSeaDepth() {
      return seaDepth_;
    }
    /**
     * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getSeaDepthOrBuilder() {
      return seaDepth_;
    }

    // optional .World.World.IntegerMatrix biome = 9;
    public static final int BIOME_FIELD_NUMBER = 9;
    private org.worldengine.world.WorldFile.World.IntegerMatrix biome_;
    /**
     * <code>optional .World.World.IntegerMatrix biome = 9;</code>
     *
     * <pre>
     * Biome
     * </pre>
     */
    public boolean hasBiome() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .World.World.IntegerMatrix biome = 9;</code>
     *
     * <pre>
     * Biome
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.IntegerMatrix getBiome() {
      return biome_;
    }
    /**
     * <code>optional .World.World.IntegerMatrix biome = 9;</code>
     *
     * <pre>
     * Biome
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder getBiomeOrBuilder() {
      return biome_;
    }

    // optional .World.World.DoubleMatrixWithQuantiles humidity = 10;
    public static final int HUMIDITY_FIELD_NUMBER = 10;
    private org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles humidity_;
    /**
     * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
     *
     * <pre>
     * Humidity
     * </pre>
     */
    public boolean hasHumidity() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
     *
     * <pre>
     * Humidity
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles getHumidity() {
      return humidity_;
    }
    /**
     * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
     *
     * <pre>
     * Humidity
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantilesOrBuilder getHumidityOrBuilder() {
      return humidity_;
    }

    // optional .World.World.DoubleMatrix irrigation = 11;
    public static final int IRRIGATION_FIELD_NUMBER = 11;
    private org.worldengine.world.WorldFile.World.DoubleMatrix irrigation_;
    /**
     * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
     *
     * <pre>
     * Irrigation
     * </pre>
     */
    public boolean hasIrrigation() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
     *
     * <pre>
     * Irrigation
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getIrrigation() {
      return irrigation_;
    }
    /**
     * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
     *
     * <pre>
     * Irrigation
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getIrrigationOrBuilder() {
      return irrigation_;
    }

    // optional .World.World.DoubleMatrix permeabilityData = 12;
    public static final int PERMEABILITYDATA_FIELD_NUMBER = 12;
    private org.worldengine.world.WorldFile.World.DoubleMatrix permeabilityData_;
    /**
     * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
     *
     * <pre>
     * Permeability
     * </pre>
     */
    public boolean hasPermeabilityData() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
     *
     * <pre>
     * Permeability
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getPermeabilityData() {
      return permeabilityData_;
    }
    /**
     * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
     *
     * <pre>
     * Permeability
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getPermeabilityDataOrBuilder() {
      return permeabilityData_;
    }

    // optional double permeability_low = 13;
    public static final int PERMEABILITY_LOW_FIELD_NUMBER = 13;
    private double permeabilityLow_;
    /**
     * <code>optional double permeability_low = 13;</code>
     */
    public boolean hasPermeabilityLow() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional double permeability_low = 13;</code>
     */
    public double getPermeabilityLow() {
      return permeabilityLow_;
    }

    // optional double permeability_med = 14;
    public static final int PERMEABILITY_MED_FIELD_NUMBER = 14;
    private double permeabilityMed_;
    /**
     * <code>optional double permeability_med = 14;</code>
     */
    public boolean hasPermeabilityMed() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional double permeability_med = 14;</code>
     */
    public double getPermeabilityMed() {
      return permeabilityMed_;
    }

    // optional .World.World.DoubleMatrix watermapData = 15;
    public static final int WATERMAPDATA_FIELD_NUMBER = 15;
    private org.worldengine.world.WorldFile.World.DoubleMatrix watermapData_;
    /**
     * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
     *
     * <pre>
     * Watermap
     * </pre>
     */
    public boolean hasWatermapData() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
     *
     * <pre>
     * Watermap
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getWatermapData() {
      return watermapData_;
    }
    /**
     * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
     *
     * <pre>
     * Watermap
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getWatermapDataOrBuilder() {
      return watermapData_;
    }

    // optional double watermap_creek = 16;
    public static final int WATERMAP_CREEK_FIELD_NUMBER = 16;
    private double watermapCreek_;
    /**
     * <code>optional double watermap_creek = 16;</code>
     */
    public boolean hasWatermapCreek() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional double watermap_creek = 16;</code>
     */
    public double getWatermapCreek() {
      return watermapCreek_;
    }

    // optional double watermap_river = 17;
    public static final int WATERMAP_RIVER_FIELD_NUMBER = 17;
    private double watermapRiver_;
    /**
     * <code>optional double watermap_river = 17;</code>
     */
    public boolean hasWatermapRiver() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional double watermap_river = 17;</code>
     */
    public double getWatermapRiver() {
      return watermapRiver_;
    }

    // optional double watermap_mainriver = 18;
    public static final int WATERMAP_MAINRIVER_FIELD_NUMBER = 18;
    private double watermapMainriver_;
    /**
     * <code>optional double watermap_mainriver = 18;</code>
     */
    public boolean hasWatermapMainriver() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional double watermap_mainriver = 18;</code>
     */
    public double getWatermapMainriver() {
      return watermapMainriver_;
    }

    // optional .World.World.DoubleMatrix precipitationData = 19;
    public static final int PRECIPITATIONDATA_FIELD_NUMBER = 19;
    private org.worldengine.world.WorldFile.World.DoubleMatrix precipitationData_;
    /**
     * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
     *
     * <pre>
     * Precipitation
     * </pre>
     */
    public boolean hasPrecipitationData() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
     *
     * <pre>
     * Precipitation
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getPrecipitationData() {
      return precipitationData_;
    }
    /**
     * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
     *
     * <pre>
     * Precipitation
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getPrecipitationDataOrBuilder() {
      return precipitationData_;
    }

    // optional double precipitation_low = 20;
    public static final int PRECIPITATION_LOW_FIELD_NUMBER = 20;
    private double precipitationLow_;
    /**
     * <code>optional double precipitation_low = 20;</code>
     */
    public boolean hasPrecipitationLow() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional double precipitation_low = 20;</code>
     */
    public double getPrecipitationLow() {
      return precipitationLow_;
    }

    // optional double precipitation_med = 21;
    public static final int PRECIPITATION_MED_FIELD_NUMBER = 21;
    private double precipitationMed_;
    /**
     * <code>optional double precipitation_med = 21;</code>
     */
    public boolean hasPrecipitationMed() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional double precipitation_med = 21;</code>
     */
    public double getPrecipitationMed() {
      return precipitationMed_;
    }

    // optional .World.World.DoubleMatrix temperatureData = 22;
    public static final int TEMPERATUREDATA_FIELD_NUMBER = 22;
    private org.worldengine.world.WorldFile.World.DoubleMatrix temperatureData_;
    /**
     * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
     *
     * <pre>
     * Temperature
     * </pre>
     */
    public boolean hasTemperatureData() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
     *
     * <pre>
     * Temperature
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getTemperatureData() {
      return temperatureData_;
    }
    /**
     * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
     *
     * <pre>
     * Temperature
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getTemperatureDataOrBuilder() {
      return temperatureData_;
    }

    // optional double temperature_polar = 23;
    public static final int TEMPERATURE_POLAR_FIELD_NUMBER = 23;
    private double temperaturePolar_;
    /**
     * <code>optional double temperature_polar = 23;</code>
     */
    public boolean hasTemperaturePolar() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional double temperature_polar = 23;</code>
     */
    public double getTemperaturePolar() {
      return temperaturePolar_;
    }

    // optional double temperature_alpine = 24;
    public static final int TEMPERATURE_ALPINE_FIELD_NUMBER = 24;
    private double temperatureAlpine_;
    /**
     * <code>optional double temperature_alpine = 24;</code>
     */
    public boolean hasTemperatureAlpine() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional double temperature_alpine = 24;</code>
     */
    public double getTemperatureAlpine() {
      return temperatureAlpine_;
    }

    // optional double temperature_boreal = 25;
    public static final int TEMPERATURE_BOREAL_FIELD_NUMBER = 25;
    private double temperatureBoreal_;
    /**
     * <code>optional double temperature_boreal = 25;</code>
     */
    public boolean hasTemperatureBoreal() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional double temperature_boreal = 25;</code>
     */
    public double getTemperatureBoreal() {
      return temperatureBoreal_;
    }

    // optional double temperature_cool = 26;
    public static final int TEMPERATURE_COOL_FIELD_NUMBER = 26;
    private double temperatureCool_;
    /**
     * <code>optional double temperature_cool = 26;</code>
     */
    public boolean hasTemperatureCool() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional double temperature_cool = 26;</code>
     */
    public double getTemperatureCool() {
      return temperatureCool_;
    }

    // optional double temperature_warm = 27;
    public static final int TEMPERATURE_WARM_FIELD_NUMBER = 27;
    private double temperatureWarm_;
    /**
     * <code>optional double temperature_warm = 27;</code>
     */
    public boolean hasTemperatureWarm() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional double temperature_warm = 27;</code>
     */
    public double getTemperatureWarm() {
      return temperatureWarm_;
    }

    // optional double temperature_subtropical = 28;
    public static final int TEMPERATURE_SUBTROPICAL_FIELD_NUMBER = 28;
    private double temperatureSubtropical_;
    /**
     * <code>optional double temperature_subtropical = 28;</code>
     */
    public boolean hasTemperatureSubtropical() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional double temperature_subtropical = 28;</code>
     */
    public double getTemperatureSubtropical() {
      return temperatureSubtropical_;
    }

    // optional .World.World.GenerationData generationData = 31;
    public static final int GENERATIONDATA_FIELD_NUMBER = 31;
    private org.worldengine.world.WorldFile.World.GenerationData generationData_;
    /**
     * <code>optional .World.World.GenerationData generationData = 31;</code>
     *
     * <pre>
     * Data about generation:
     * introduced in v0.5.3
     * this is optional for backward compatibility reasons
     * </pre>
     */
    public boolean hasGenerationData() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .World.World.GenerationData generationData = 31;</code>
     *
     * <pre>
     * Data about generation:
     * introduced in v0.5.3
     * this is optional for backward compatibility reasons
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.GenerationData getGenerationData() {
      return generationData_;
    }
    /**
     * <code>optional .World.World.GenerationData generationData = 31;</code>
     *
     * <pre>
     * Data about generation:
     * introduced in v0.5.3
     * this is optional for backward compatibility reasons
     * </pre>
     */
    public org.worldengine.world.WorldFile.World.GenerationDataOrBuilder getGenerationDataOrBuilder() {
      return generationData_;
    }

    // optional .World.World.DoubleMatrix lakemap = 32;
    public static final int LAKEMAP_FIELD_NUMBER = 32;
    private org.worldengine.world.WorldFile.World.DoubleMatrix lakemap_;
    /**
     * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
     */
    public boolean hasLakemap() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getLakemap() {
      return lakemap_;
    }
    /**
     * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getLakemapOrBuilder() {
      return lakemap_;
    }

    // optional .World.World.DoubleMatrix rivermap = 33;
    public static final int RIVERMAP_FIELD_NUMBER = 33;
    private org.worldengine.world.WorldFile.World.DoubleMatrix rivermap_;
    /**
     * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
     */
    public boolean hasRivermap() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrix getRivermap() {
      return rivermap_;
    }
    /**
     * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
     */
    public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getRivermapOrBuilder() {
      return rivermap_;
    }

    private void initFields() {
      name_ = "";
      width_ = 0;
      height_ = 0;
      heightMapData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      heightMapThSea_ = 0D;
      heightMapThPlain_ = 0D;
      heightMapThHill_ = 0D;
      plates_ = org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
      ocean_ = org.worldengine.world.WorldFile.World.BooleanMatrix.getDefaultInstance();
      seaDepth_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      biome_ = org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
      humidity_ = org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.getDefaultInstance();
      irrigation_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      permeabilityData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      permeabilityLow_ = 0D;
      permeabilityMed_ = 0D;
      watermapData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      watermapCreek_ = 0D;
      watermapRiver_ = 0D;
      watermapMainriver_ = 0D;
      precipitationData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      precipitationLow_ = 0D;
      precipitationMed_ = 0D;
      temperatureData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      temperaturePolar_ = 0D;
      temperatureAlpine_ = 0D;
      temperatureBoreal_ = 0D;
      temperatureCool_ = 0D;
      temperatureWarm_ = 0D;
      temperatureSubtropical_ = 0D;
      generationData_ = org.worldengine.world.WorldFile.World.GenerationData.getDefaultInstance();
      lakemap_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      rivermap_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeightMapData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeightMapThSea()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeightMapThPlain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeightMapThHill()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlates()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOcean()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSeaDepth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasHumidity()) {
        if (!getHumidity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, heightMapData_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, heightMapThSea_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, heightMapThPlain_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, heightMapThHill_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(8, ocean_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(9, biome_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(10, humidity_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(11, irrigation_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(12, permeabilityData_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(13, permeabilityLow_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeDouble(14, permeabilityMed_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(15, watermapData_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeDouble(16, watermapCreek_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeDouble(17, watermapRiver_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(18, watermapMainriver_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(19, precipitationData_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeDouble(20, precipitationLow_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeDouble(21, precipitationMed_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(22, temperatureData_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeDouble(23, temperaturePolar_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeDouble(24, temperatureAlpine_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeDouble(25, temperatureBoreal_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeDouble(26, temperatureCool_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeDouble(27, temperatureWarm_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeDouble(28, temperatureSubtropical_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(29, seaDepth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(30, plates_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(31, generationData_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(32, lakemap_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(33, rivermap_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, heightMapData_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, heightMapThSea_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, heightMapThPlain_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, heightMapThHill_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, ocean_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, biome_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, humidity_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, irrigation_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, permeabilityData_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, permeabilityLow_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, permeabilityMed_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, watermapData_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, watermapCreek_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, watermapRiver_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, watermapMainriver_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, precipitationData_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, precipitationLow_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, precipitationMed_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, temperatureData_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, temperaturePolar_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(24, temperatureAlpine_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, temperatureBoreal_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(26, temperatureCool_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(27, temperatureWarm_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(28, temperatureSubtropical_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, seaDepth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, plates_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, generationData_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, lakemap_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, rivermap_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.worldengine.world.WorldFile.World parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.worldengine.world.WorldFile.World parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.worldengine.world.WorldFile.World parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.worldengine.world.WorldFile.World parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.worldengine.world.WorldFile.World parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.worldengine.world.WorldFile.World parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.worldengine.world.WorldFile.World parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.worldengine.world.WorldFile.World parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.worldengine.world.WorldFile.World parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.worldengine.world.WorldFile.World parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.worldengine.world.WorldFile.World prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code World.World}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.worldengine.world.WorldFile.WorldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.worldengine.world.WorldFile.internal_static_World_World_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.worldengine.world.WorldFile.internal_static_World_World_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.worldengine.world.WorldFile.World.class, org.worldengine.world.WorldFile.World.Builder.class);
      }

      // Construct using org.worldengine.world.WorldFile.World.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeightMapDataFieldBuilder();
          getPlatesFieldBuilder();
          getOceanFieldBuilder();
          getSeaDepthFieldBuilder();
          getBiomeFieldBuilder();
          getHumidityFieldBuilder();
          getIrrigationFieldBuilder();
          getPermeabilityDataFieldBuilder();
          getWatermapDataFieldBuilder();
          getPrecipitationDataFieldBuilder();
          getTemperatureDataFieldBuilder();
          getGenerationDataFieldBuilder();
          getLakemapFieldBuilder();
          getRivermapFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (heightMapDataBuilder_ == null) {
          heightMapData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          heightMapDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        heightMapThSea_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        heightMapThPlain_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        heightMapThHill_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (platesBuilder_ == null) {
          plates_ = org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
        } else {
          platesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (oceanBuilder_ == null) {
          ocean_ = org.worldengine.world.WorldFile.World.BooleanMatrix.getDefaultInstance();
        } else {
          oceanBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (seaDepthBuilder_ == null) {
          seaDepth_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          seaDepthBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (biomeBuilder_ == null) {
          biome_ = org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
        } else {
          biomeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (humidityBuilder_ == null) {
          humidity_ = org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.getDefaultInstance();
        } else {
          humidityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (irrigationBuilder_ == null) {
          irrigation_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          irrigationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (permeabilityDataBuilder_ == null) {
          permeabilityData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          permeabilityDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        permeabilityLow_ = 0D;
        bitField0_ = (bitField0_ & ~0x00004000);
        permeabilityMed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (watermapDataBuilder_ == null) {
          watermapData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          watermapDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        watermapCreek_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        watermapRiver_ = 0D;
        bitField0_ = (bitField0_ & ~0x00040000);
        watermapMainriver_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        if (precipitationDataBuilder_ == null) {
          precipitationData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          precipitationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        precipitationLow_ = 0D;
        bitField0_ = (bitField0_ & ~0x00200000);
        precipitationMed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00400000);
        if (temperatureDataBuilder_ == null) {
          temperatureData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          temperatureDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        temperaturePolar_ = 0D;
        bitField0_ = (bitField0_ & ~0x01000000);
        temperatureAlpine_ = 0D;
        bitField0_ = (bitField0_ & ~0x02000000);
        temperatureBoreal_ = 0D;
        bitField0_ = (bitField0_ & ~0x04000000);
        temperatureCool_ = 0D;
        bitField0_ = (bitField0_ & ~0x08000000);
        temperatureWarm_ = 0D;
        bitField0_ = (bitField0_ & ~0x10000000);
        temperatureSubtropical_ = 0D;
        bitField0_ = (bitField0_ & ~0x20000000);
        if (generationDataBuilder_ == null) {
          generationData_ = org.worldengine.world.WorldFile.World.GenerationData.getDefaultInstance();
        } else {
          generationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        if (lakemapBuilder_ == null) {
          lakemap_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          lakemapBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        if (rivermapBuilder_ == null) {
          rivermap_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
        } else {
          rivermapBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.worldengine.world.WorldFile.internal_static_World_World_descriptor;
      }

      public org.worldengine.world.WorldFile.World getDefaultInstanceForType() {
        return org.worldengine.world.WorldFile.World.getDefaultInstance();
      }

      public org.worldengine.world.WorldFile.World build() {
        org.worldengine.world.WorldFile.World result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.worldengine.world.WorldFile.World buildPartial() {
        org.worldengine.world.WorldFile.World result = new org.worldengine.world.WorldFile.World(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (heightMapDataBuilder_ == null) {
          result.heightMapData_ = heightMapData_;
        } else {
          result.heightMapData_ = heightMapDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.heightMapThSea_ = heightMapThSea_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.heightMapThPlain_ = heightMapThPlain_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.heightMapThHill_ = heightMapThHill_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (platesBuilder_ == null) {
          result.plates_ = plates_;
        } else {
          result.plates_ = platesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (oceanBuilder_ == null) {
          result.ocean_ = ocean_;
        } else {
          result.ocean_ = oceanBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (seaDepthBuilder_ == null) {
          result.seaDepth_ = seaDepth_;
        } else {
          result.seaDepth_ = seaDepthBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (biomeBuilder_ == null) {
          result.biome_ = biome_;
        } else {
          result.biome_ = biomeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (humidityBuilder_ == null) {
          result.humidity_ = humidity_;
        } else {
          result.humidity_ = humidityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (irrigationBuilder_ == null) {
          result.irrigation_ = irrigation_;
        } else {
          result.irrigation_ = irrigationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (permeabilityDataBuilder_ == null) {
          result.permeabilityData_ = permeabilityData_;
        } else {
          result.permeabilityData_ = permeabilityDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.permeabilityLow_ = permeabilityLow_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.permeabilityMed_ = permeabilityMed_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (watermapDataBuilder_ == null) {
          result.watermapData_ = watermapData_;
        } else {
          result.watermapData_ = watermapDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.watermapCreek_ = watermapCreek_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.watermapRiver_ = watermapRiver_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.watermapMainriver_ = watermapMainriver_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (precipitationDataBuilder_ == null) {
          result.precipitationData_ = precipitationData_;
        } else {
          result.precipitationData_ = precipitationDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.precipitationLow_ = precipitationLow_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.precipitationMed_ = precipitationMed_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (temperatureDataBuilder_ == null) {
          result.temperatureData_ = temperatureData_;
        } else {
          result.temperatureData_ = temperatureDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.temperaturePolar_ = temperaturePolar_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.temperatureAlpine_ = temperatureAlpine_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.temperatureBoreal_ = temperatureBoreal_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.temperatureCool_ = temperatureCool_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.temperatureWarm_ = temperatureWarm_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.temperatureSubtropical_ = temperatureSubtropical_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        if (generationDataBuilder_ == null) {
          result.generationData_ = generationData_;
        } else {
          result.generationData_ = generationDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        if (lakemapBuilder_ == null) {
          result.lakemap_ = lakemap_;
        } else {
          result.lakemap_ = lakemapBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        if (rivermapBuilder_ == null) {
          result.rivermap_ = rivermap_;
        } else {
          result.rivermap_ = rivermapBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.worldengine.world.WorldFile.World) {
          return mergeFrom((org.worldengine.world.WorldFile.World)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.worldengine.world.WorldFile.World other) {
        if (other == org.worldengine.world.WorldFile.World.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasHeightMapData()) {
          mergeHeightMapData(other.getHeightMapData());
        }
        if (other.hasHeightMapThSea()) {
          setHeightMapThSea(other.getHeightMapThSea());
        }
        if (other.hasHeightMapThPlain()) {
          setHeightMapThPlain(other.getHeightMapThPlain());
        }
        if (other.hasHeightMapThHill()) {
          setHeightMapThHill(other.getHeightMapThHill());
        }
        if (other.hasPlates()) {
          mergePlates(other.getPlates());
        }
        if (other.hasOcean()) {
          mergeOcean(other.getOcean());
        }
        if (other.hasSeaDepth()) {
          mergeSeaDepth(other.getSeaDepth());
        }
        if (other.hasBiome()) {
          mergeBiome(other.getBiome());
        }
        if (other.hasHumidity()) {
          mergeHumidity(other.getHumidity());
        }
        if (other.hasIrrigation()) {
          mergeIrrigation(other.getIrrigation());
        }
        if (other.hasPermeabilityData()) {
          mergePermeabilityData(other.getPermeabilityData());
        }
        if (other.hasPermeabilityLow()) {
          setPermeabilityLow(other.getPermeabilityLow());
        }
        if (other.hasPermeabilityMed()) {
          setPermeabilityMed(other.getPermeabilityMed());
        }
        if (other.hasWatermapData()) {
          mergeWatermapData(other.getWatermapData());
        }
        if (other.hasWatermapCreek()) {
          setWatermapCreek(other.getWatermapCreek());
        }
        if (other.hasWatermapRiver()) {
          setWatermapRiver(other.getWatermapRiver());
        }
        if (other.hasWatermapMainriver()) {
          setWatermapMainriver(other.getWatermapMainriver());
        }
        if (other.hasPrecipitationData()) {
          mergePrecipitationData(other.getPrecipitationData());
        }
        if (other.hasPrecipitationLow()) {
          setPrecipitationLow(other.getPrecipitationLow());
        }
        if (other.hasPrecipitationMed()) {
          setPrecipitationMed(other.getPrecipitationMed());
        }
        if (other.hasTemperatureData()) {
          mergeTemperatureData(other.getTemperatureData());
        }
        if (other.hasTemperaturePolar()) {
          setTemperaturePolar(other.getTemperaturePolar());
        }
        if (other.hasTemperatureAlpine()) {
          setTemperatureAlpine(other.getTemperatureAlpine());
        }
        if (other.hasTemperatureBoreal()) {
          setTemperatureBoreal(other.getTemperatureBoreal());
        }
        if (other.hasTemperatureCool()) {
          setTemperatureCool(other.getTemperatureCool());
        }
        if (other.hasTemperatureWarm()) {
          setTemperatureWarm(other.getTemperatureWarm());
        }
        if (other.hasTemperatureSubtropical()) {
          setTemperatureSubtropical(other.getTemperatureSubtropical());
        }
        if (other.hasGenerationData()) {
          mergeGenerationData(other.getGenerationData());
        }
        if (other.hasLakemap()) {
          mergeLakemap(other.getLakemap());
        }
        if (other.hasRivermap()) {
          mergeRivermap(other.getRivermap());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        if (!hasHeightMapData()) {
          
          return false;
        }
        if (!hasHeightMapThSea()) {
          
          return false;
        }
        if (!hasHeightMapThPlain()) {
          
          return false;
        }
        if (!hasHeightMapThHill()) {
          
          return false;
        }
        if (!hasPlates()) {
          
          return false;
        }
        if (!hasOcean()) {
          
          return false;
        }
        if (!hasSeaDepth()) {
          
          return false;
        }
        if (hasHumidity()) {
          if (!getHumidity().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.worldengine.world.WorldFile.World parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.worldengine.world.WorldFile.World) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 width = 2;
      private int width_ ;
      /**
       * <code>required int32 width = 2;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 width = 2;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required int32 width = 2;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000002;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 width = 2;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0;
        onChanged();
        return this;
      }

      // required int32 height = 3;
      private int height_ ;
      /**
       * <code>required int32 height = 3;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 height = 3;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required int32 height = 3;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000004;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 height = 3;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        onChanged();
        return this;
      }

      // required .World.World.DoubleMatrix heightMapData = 4;
      private org.worldengine.world.WorldFile.World.DoubleMatrix heightMapData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> heightMapDataBuilder_;
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      public boolean hasHeightMapData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getHeightMapData() {
        if (heightMapDataBuilder_ == null) {
          return heightMapData_;
        } else {
          return heightMapDataBuilder_.getMessage();
        }
      }
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      public Builder setHeightMapData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (heightMapDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heightMapData_ = value;
          onChanged();
        } else {
          heightMapDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      public Builder setHeightMapData(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (heightMapDataBuilder_ == null) {
          heightMapData_ = builderForValue.build();
          onChanged();
        } else {
          heightMapDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      public Builder mergeHeightMapData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (heightMapDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              heightMapData_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            heightMapData_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(heightMapData_).mergeFrom(value).buildPartial();
          } else {
            heightMapData_ = value;
          }
          onChanged();
        } else {
          heightMapDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      public Builder clearHeightMapData() {
        if (heightMapDataBuilder_ == null) {
          heightMapData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          heightMapDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getHeightMapDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getHeightMapDataFieldBuilder().getBuilder();
      }
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getHeightMapDataOrBuilder() {
        if (heightMapDataBuilder_ != null) {
          return heightMapDataBuilder_.getMessageOrBuilder();
        } else {
          return heightMapData_;
        }
      }
      /**
       * <code>required .World.World.DoubleMatrix heightMapData = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getHeightMapDataFieldBuilder() {
        if (heightMapDataBuilder_ == null) {
          heightMapDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  heightMapData_,
                  getParentForChildren(),
                  isClean());
          heightMapData_ = null;
        }
        return heightMapDataBuilder_;
      }

      // required double heightMapTh_sea = 5;
      private double heightMapThSea_ ;
      /**
       * <code>required double heightMapTh_sea = 5;</code>
       */
      public boolean hasHeightMapThSea() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double heightMapTh_sea = 5;</code>
       */
      public double getHeightMapThSea() {
        return heightMapThSea_;
      }
      /**
       * <code>required double heightMapTh_sea = 5;</code>
       */
      public Builder setHeightMapThSea(double value) {
        bitField0_ |= 0x00000010;
        heightMapThSea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double heightMapTh_sea = 5;</code>
       */
      public Builder clearHeightMapThSea() {
        bitField0_ = (bitField0_ & ~0x00000010);
        heightMapThSea_ = 0D;
        onChanged();
        return this;
      }

      // required double heightMapTh_plain = 6;
      private double heightMapThPlain_ ;
      /**
       * <code>required double heightMapTh_plain = 6;</code>
       */
      public boolean hasHeightMapThPlain() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required double heightMapTh_plain = 6;</code>
       */
      public double getHeightMapThPlain() {
        return heightMapThPlain_;
      }
      /**
       * <code>required double heightMapTh_plain = 6;</code>
       */
      public Builder setHeightMapThPlain(double value) {
        bitField0_ |= 0x00000020;
        heightMapThPlain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double heightMapTh_plain = 6;</code>
       */
      public Builder clearHeightMapThPlain() {
        bitField0_ = (bitField0_ & ~0x00000020);
        heightMapThPlain_ = 0D;
        onChanged();
        return this;
      }

      // required double heightMapTh_hill = 7;
      private double heightMapThHill_ ;
      /**
       * <code>required double heightMapTh_hill = 7;</code>
       */
      public boolean hasHeightMapThHill() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required double heightMapTh_hill = 7;</code>
       */
      public double getHeightMapThHill() {
        return heightMapThHill_;
      }
      /**
       * <code>required double heightMapTh_hill = 7;</code>
       */
      public Builder setHeightMapThHill(double value) {
        bitField0_ |= 0x00000040;
        heightMapThHill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double heightMapTh_hill = 7;</code>
       */
      public Builder clearHeightMapThHill() {
        bitField0_ = (bitField0_ & ~0x00000040);
        heightMapThHill_ = 0D;
        onChanged();
        return this;
      }

      // required .World.World.IntegerMatrix plates = 30;
      private org.worldengine.world.WorldFile.World.IntegerMatrix plates_ = org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.IntegerMatrix, org.worldengine.world.WorldFile.World.IntegerMatrix.Builder, org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder> platesBuilder_;
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      public boolean hasPlates() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.IntegerMatrix getPlates() {
        if (platesBuilder_ == null) {
          return plates_;
        } else {
          return platesBuilder_.getMessage();
        }
      }
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      public Builder setPlates(org.worldengine.world.WorldFile.World.IntegerMatrix value) {
        if (platesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          plates_ = value;
          onChanged();
        } else {
          platesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      public Builder setPlates(
          org.worldengine.world.WorldFile.World.IntegerMatrix.Builder builderForValue) {
        if (platesBuilder_ == null) {
          plates_ = builderForValue.build();
          onChanged();
        } else {
          platesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      public Builder mergePlates(org.worldengine.world.WorldFile.World.IntegerMatrix value) {
        if (platesBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              plates_ != org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance()) {
            plates_ =
              org.worldengine.world.WorldFile.World.IntegerMatrix.newBuilder(plates_).mergeFrom(value).buildPartial();
          } else {
            plates_ = value;
          }
          onChanged();
        } else {
          platesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      public Builder clearPlates() {
        if (platesBuilder_ == null) {
          plates_ = org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
          onChanged();
        } else {
          platesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.IntegerMatrix.Builder getPlatesBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getPlatesFieldBuilder().getBuilder();
      }
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder getPlatesOrBuilder() {
        if (platesBuilder_ != null) {
          return platesBuilder_.getMessageOrBuilder();
        } else {
          return plates_;
        }
      }
      /**
       * <code>required .World.World.IntegerMatrix plates = 30;</code>
       *
       * <pre>
       * Plates
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.IntegerMatrix, org.worldengine.world.WorldFile.World.IntegerMatrix.Builder, org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder> 
          getPlatesFieldBuilder() {
        if (platesBuilder_ == null) {
          platesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.IntegerMatrix, org.worldengine.world.WorldFile.World.IntegerMatrix.Builder, org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder>(
                  plates_,
                  getParentForChildren(),
                  isClean());
          plates_ = null;
        }
        return platesBuilder_;
      }

      // required .World.World.BooleanMatrix ocean = 8;
      private org.worldengine.world.WorldFile.World.BooleanMatrix ocean_ = org.worldengine.world.WorldFile.World.BooleanMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.BooleanMatrix, org.worldengine.world.WorldFile.World.BooleanMatrix.Builder, org.worldengine.world.WorldFile.World.BooleanMatrixOrBuilder> oceanBuilder_;
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      public boolean hasOcean() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.BooleanMatrix getOcean() {
        if (oceanBuilder_ == null) {
          return ocean_;
        } else {
          return oceanBuilder_.getMessage();
        }
      }
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      public Builder setOcean(org.worldengine.world.WorldFile.World.BooleanMatrix value) {
        if (oceanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ocean_ = value;
          onChanged();
        } else {
          oceanBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      public Builder setOcean(
          org.worldengine.world.WorldFile.World.BooleanMatrix.Builder builderForValue) {
        if (oceanBuilder_ == null) {
          ocean_ = builderForValue.build();
          onChanged();
        } else {
          oceanBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      public Builder mergeOcean(org.worldengine.world.WorldFile.World.BooleanMatrix value) {
        if (oceanBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              ocean_ != org.worldengine.world.WorldFile.World.BooleanMatrix.getDefaultInstance()) {
            ocean_ =
              org.worldengine.world.WorldFile.World.BooleanMatrix.newBuilder(ocean_).mergeFrom(value).buildPartial();
          } else {
            ocean_ = value;
          }
          onChanged();
        } else {
          oceanBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      public Builder clearOcean() {
        if (oceanBuilder_ == null) {
          ocean_ = org.worldengine.world.WorldFile.World.BooleanMatrix.getDefaultInstance();
          onChanged();
        } else {
          oceanBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.BooleanMatrix.Builder getOceanBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getOceanFieldBuilder().getBuilder();
      }
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.BooleanMatrixOrBuilder getOceanOrBuilder() {
        if (oceanBuilder_ != null) {
          return oceanBuilder_.getMessageOrBuilder();
        } else {
          return ocean_;
        }
      }
      /**
       * <code>required .World.World.BooleanMatrix ocean = 8;</code>
       *
       * <pre>
       * Ocean
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.BooleanMatrix, org.worldengine.world.WorldFile.World.BooleanMatrix.Builder, org.worldengine.world.WorldFile.World.BooleanMatrixOrBuilder> 
          getOceanFieldBuilder() {
        if (oceanBuilder_ == null) {
          oceanBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.BooleanMatrix, org.worldengine.world.WorldFile.World.BooleanMatrix.Builder, org.worldengine.world.WorldFile.World.BooleanMatrixOrBuilder>(
                  ocean_,
                  getParentForChildren(),
                  isClean());
          ocean_ = null;
        }
        return oceanBuilder_;
      }

      // required .World.World.DoubleMatrix sea_depth = 29;
      private org.worldengine.world.WorldFile.World.DoubleMatrix seaDepth_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> seaDepthBuilder_;
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      public boolean hasSeaDepth() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getSeaDepth() {
        if (seaDepthBuilder_ == null) {
          return seaDepth_;
        } else {
          return seaDepthBuilder_.getMessage();
        }
      }
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      public Builder setSeaDepth(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (seaDepthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seaDepth_ = value;
          onChanged();
        } else {
          seaDepthBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      public Builder setSeaDepth(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (seaDepthBuilder_ == null) {
          seaDepth_ = builderForValue.build();
          onChanged();
        } else {
          seaDepthBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      public Builder mergeSeaDepth(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (seaDepthBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              seaDepth_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            seaDepth_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(seaDepth_).mergeFrom(value).buildPartial();
          } else {
            seaDepth_ = value;
          }
          onChanged();
        } else {
          seaDepthBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      public Builder clearSeaDepth() {
        if (seaDepthBuilder_ == null) {
          seaDepth_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          seaDepthBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getSeaDepthBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getSeaDepthFieldBuilder().getBuilder();
      }
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getSeaDepthOrBuilder() {
        if (seaDepthBuilder_ != null) {
          return seaDepthBuilder_.getMessageOrBuilder();
        } else {
          return seaDepth_;
        }
      }
      /**
       * <code>required .World.World.DoubleMatrix sea_depth = 29;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getSeaDepthFieldBuilder() {
        if (seaDepthBuilder_ == null) {
          seaDepthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  seaDepth_,
                  getParentForChildren(),
                  isClean());
          seaDepth_ = null;
        }
        return seaDepthBuilder_;
      }

      // optional .World.World.IntegerMatrix biome = 9;
      private org.worldengine.world.WorldFile.World.IntegerMatrix biome_ = org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.IntegerMatrix, org.worldengine.world.WorldFile.World.IntegerMatrix.Builder, org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder> biomeBuilder_;
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      public boolean hasBiome() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.IntegerMatrix getBiome() {
        if (biomeBuilder_ == null) {
          return biome_;
        } else {
          return biomeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      public Builder setBiome(org.worldengine.world.WorldFile.World.IntegerMatrix value) {
        if (biomeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          biome_ = value;
          onChanged();
        } else {
          biomeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      public Builder setBiome(
          org.worldengine.world.WorldFile.World.IntegerMatrix.Builder builderForValue) {
        if (biomeBuilder_ == null) {
          biome_ = builderForValue.build();
          onChanged();
        } else {
          biomeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      public Builder mergeBiome(org.worldengine.world.WorldFile.World.IntegerMatrix value) {
        if (biomeBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              biome_ != org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance()) {
            biome_ =
              org.worldengine.world.WorldFile.World.IntegerMatrix.newBuilder(biome_).mergeFrom(value).buildPartial();
          } else {
            biome_ = value;
          }
          onChanged();
        } else {
          biomeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      public Builder clearBiome() {
        if (biomeBuilder_ == null) {
          biome_ = org.worldengine.world.WorldFile.World.IntegerMatrix.getDefaultInstance();
          onChanged();
        } else {
          biomeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.IntegerMatrix.Builder getBiomeBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getBiomeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder getBiomeOrBuilder() {
        if (biomeBuilder_ != null) {
          return biomeBuilder_.getMessageOrBuilder();
        } else {
          return biome_;
        }
      }
      /**
       * <code>optional .World.World.IntegerMatrix biome = 9;</code>
       *
       * <pre>
       * Biome
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.IntegerMatrix, org.worldengine.world.WorldFile.World.IntegerMatrix.Builder, org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder> 
          getBiomeFieldBuilder() {
        if (biomeBuilder_ == null) {
          biomeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.IntegerMatrix, org.worldengine.world.WorldFile.World.IntegerMatrix.Builder, org.worldengine.world.WorldFile.World.IntegerMatrixOrBuilder>(
                  biome_,
                  getParentForChildren(),
                  isClean());
          biome_ = null;
        }
        return biomeBuilder_;
      }

      // optional .World.World.DoubleMatrixWithQuantiles humidity = 10;
      private org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles humidity_ = org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles, org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantilesOrBuilder> humidityBuilder_;
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      public boolean hasHumidity() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles getHumidity() {
        if (humidityBuilder_ == null) {
          return humidity_;
        } else {
          return humidityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      public Builder setHumidity(org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles value) {
        if (humidityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          humidity_ = value;
          onChanged();
        } else {
          humidityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      public Builder setHumidity(
          org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.Builder builderForValue) {
        if (humidityBuilder_ == null) {
          humidity_ = builderForValue.build();
          onChanged();
        } else {
          humidityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      public Builder mergeHumidity(org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles value) {
        if (humidityBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              humidity_ != org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.getDefaultInstance()) {
            humidity_ =
              org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.newBuilder(humidity_).mergeFrom(value).buildPartial();
          } else {
            humidity_ = value;
          }
          onChanged();
        } else {
          humidityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      public Builder clearHumidity() {
        if (humidityBuilder_ == null) {
          humidity_ = org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.getDefaultInstance();
          onChanged();
        } else {
          humidityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.Builder getHumidityBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getHumidityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantilesOrBuilder getHumidityOrBuilder() {
        if (humidityBuilder_ != null) {
          return humidityBuilder_.getMessageOrBuilder();
        } else {
          return humidity_;
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrixWithQuantiles humidity = 10;</code>
       *
       * <pre>
       * Humidity
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles, org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantilesOrBuilder> 
          getHumidityFieldBuilder() {
        if (humidityBuilder_ == null) {
          humidityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles, org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantiles.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixWithQuantilesOrBuilder>(
                  humidity_,
                  getParentForChildren(),
                  isClean());
          humidity_ = null;
        }
        return humidityBuilder_;
      }

      // optional .World.World.DoubleMatrix irrigation = 11;
      private org.worldengine.world.WorldFile.World.DoubleMatrix irrigation_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> irrigationBuilder_;
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      public boolean hasIrrigation() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getIrrigation() {
        if (irrigationBuilder_ == null) {
          return irrigation_;
        } else {
          return irrigationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      public Builder setIrrigation(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (irrigationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          irrigation_ = value;
          onChanged();
        } else {
          irrigationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      public Builder setIrrigation(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (irrigationBuilder_ == null) {
          irrigation_ = builderForValue.build();
          onChanged();
        } else {
          irrigationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      public Builder mergeIrrigation(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (irrigationBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              irrigation_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            irrigation_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(irrigation_).mergeFrom(value).buildPartial();
          } else {
            irrigation_ = value;
          }
          onChanged();
        } else {
          irrigationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      public Builder clearIrrigation() {
        if (irrigationBuilder_ == null) {
          irrigation_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          irrigationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getIrrigationBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getIrrigationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getIrrigationOrBuilder() {
        if (irrigationBuilder_ != null) {
          return irrigationBuilder_.getMessageOrBuilder();
        } else {
          return irrigation_;
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix irrigation = 11;</code>
       *
       * <pre>
       * Irrigation
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getIrrigationFieldBuilder() {
        if (irrigationBuilder_ == null) {
          irrigationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  irrigation_,
                  getParentForChildren(),
                  isClean());
          irrigation_ = null;
        }
        return irrigationBuilder_;
      }

      // optional .World.World.DoubleMatrix permeabilityData = 12;
      private org.worldengine.world.WorldFile.World.DoubleMatrix permeabilityData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> permeabilityDataBuilder_;
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      public boolean hasPermeabilityData() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getPermeabilityData() {
        if (permeabilityDataBuilder_ == null) {
          return permeabilityData_;
        } else {
          return permeabilityDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      public Builder setPermeabilityData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (permeabilityDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          permeabilityData_ = value;
          onChanged();
        } else {
          permeabilityDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      public Builder setPermeabilityData(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (permeabilityDataBuilder_ == null) {
          permeabilityData_ = builderForValue.build();
          onChanged();
        } else {
          permeabilityDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      public Builder mergePermeabilityData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (permeabilityDataBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              permeabilityData_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            permeabilityData_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(permeabilityData_).mergeFrom(value).buildPartial();
          } else {
            permeabilityData_ = value;
          }
          onChanged();
        } else {
          permeabilityDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      public Builder clearPermeabilityData() {
        if (permeabilityDataBuilder_ == null) {
          permeabilityData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          permeabilityDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getPermeabilityDataBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getPermeabilityDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getPermeabilityDataOrBuilder() {
        if (permeabilityDataBuilder_ != null) {
          return permeabilityDataBuilder_.getMessageOrBuilder();
        } else {
          return permeabilityData_;
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix permeabilityData = 12;</code>
       *
       * <pre>
       * Permeability
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getPermeabilityDataFieldBuilder() {
        if (permeabilityDataBuilder_ == null) {
          permeabilityDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  permeabilityData_,
                  getParentForChildren(),
                  isClean());
          permeabilityData_ = null;
        }
        return permeabilityDataBuilder_;
      }

      // optional double permeability_low = 13;
      private double permeabilityLow_ ;
      /**
       * <code>optional double permeability_low = 13;</code>
       */
      public boolean hasPermeabilityLow() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional double permeability_low = 13;</code>
       */
      public double getPermeabilityLow() {
        return permeabilityLow_;
      }
      /**
       * <code>optional double permeability_low = 13;</code>
       */
      public Builder setPermeabilityLow(double value) {
        bitField0_ |= 0x00004000;
        permeabilityLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double permeability_low = 13;</code>
       */
      public Builder clearPermeabilityLow() {
        bitField0_ = (bitField0_ & ~0x00004000);
        permeabilityLow_ = 0D;
        onChanged();
        return this;
      }

      // optional double permeability_med = 14;
      private double permeabilityMed_ ;
      /**
       * <code>optional double permeability_med = 14;</code>
       */
      public boolean hasPermeabilityMed() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional double permeability_med = 14;</code>
       */
      public double getPermeabilityMed() {
        return permeabilityMed_;
      }
      /**
       * <code>optional double permeability_med = 14;</code>
       */
      public Builder setPermeabilityMed(double value) {
        bitField0_ |= 0x00008000;
        permeabilityMed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double permeability_med = 14;</code>
       */
      public Builder clearPermeabilityMed() {
        bitField0_ = (bitField0_ & ~0x00008000);
        permeabilityMed_ = 0D;
        onChanged();
        return this;
      }

      // optional .World.World.DoubleMatrix watermapData = 15;
      private org.worldengine.world.WorldFile.World.DoubleMatrix watermapData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> watermapDataBuilder_;
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      public boolean hasWatermapData() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getWatermapData() {
        if (watermapDataBuilder_ == null) {
          return watermapData_;
        } else {
          return watermapDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      public Builder setWatermapData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (watermapDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          watermapData_ = value;
          onChanged();
        } else {
          watermapDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      public Builder setWatermapData(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (watermapDataBuilder_ == null) {
          watermapData_ = builderForValue.build();
          onChanged();
        } else {
          watermapDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      public Builder mergeWatermapData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (watermapDataBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              watermapData_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            watermapData_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(watermapData_).mergeFrom(value).buildPartial();
          } else {
            watermapData_ = value;
          }
          onChanged();
        } else {
          watermapDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      public Builder clearWatermapData() {
        if (watermapDataBuilder_ == null) {
          watermapData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          watermapDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getWatermapDataBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getWatermapDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getWatermapDataOrBuilder() {
        if (watermapDataBuilder_ != null) {
          return watermapDataBuilder_.getMessageOrBuilder();
        } else {
          return watermapData_;
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix watermapData = 15;</code>
       *
       * <pre>
       * Watermap
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getWatermapDataFieldBuilder() {
        if (watermapDataBuilder_ == null) {
          watermapDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  watermapData_,
                  getParentForChildren(),
                  isClean());
          watermapData_ = null;
        }
        return watermapDataBuilder_;
      }

      // optional double watermap_creek = 16;
      private double watermapCreek_ ;
      /**
       * <code>optional double watermap_creek = 16;</code>
       */
      public boolean hasWatermapCreek() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional double watermap_creek = 16;</code>
       */
      public double getWatermapCreek() {
        return watermapCreek_;
      }
      /**
       * <code>optional double watermap_creek = 16;</code>
       */
      public Builder setWatermapCreek(double value) {
        bitField0_ |= 0x00020000;
        watermapCreek_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double watermap_creek = 16;</code>
       */
      public Builder clearWatermapCreek() {
        bitField0_ = (bitField0_ & ~0x00020000);
        watermapCreek_ = 0D;
        onChanged();
        return this;
      }

      // optional double watermap_river = 17;
      private double watermapRiver_ ;
      /**
       * <code>optional double watermap_river = 17;</code>
       */
      public boolean hasWatermapRiver() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional double watermap_river = 17;</code>
       */
      public double getWatermapRiver() {
        return watermapRiver_;
      }
      /**
       * <code>optional double watermap_river = 17;</code>
       */
      public Builder setWatermapRiver(double value) {
        bitField0_ |= 0x00040000;
        watermapRiver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double watermap_river = 17;</code>
       */
      public Builder clearWatermapRiver() {
        bitField0_ = (bitField0_ & ~0x00040000);
        watermapRiver_ = 0D;
        onChanged();
        return this;
      }

      // optional double watermap_mainriver = 18;
      private double watermapMainriver_ ;
      /**
       * <code>optional double watermap_mainriver = 18;</code>
       */
      public boolean hasWatermapMainriver() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional double watermap_mainriver = 18;</code>
       */
      public double getWatermapMainriver() {
        return watermapMainriver_;
      }
      /**
       * <code>optional double watermap_mainriver = 18;</code>
       */
      public Builder setWatermapMainriver(double value) {
        bitField0_ |= 0x00080000;
        watermapMainriver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double watermap_mainriver = 18;</code>
       */
      public Builder clearWatermapMainriver() {
        bitField0_ = (bitField0_ & ~0x00080000);
        watermapMainriver_ = 0D;
        onChanged();
        return this;
      }

      // optional .World.World.DoubleMatrix precipitationData = 19;
      private org.worldengine.world.WorldFile.World.DoubleMatrix precipitationData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> precipitationDataBuilder_;
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      public boolean hasPrecipitationData() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getPrecipitationData() {
        if (precipitationDataBuilder_ == null) {
          return precipitationData_;
        } else {
          return precipitationDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      public Builder setPrecipitationData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (precipitationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          precipitationData_ = value;
          onChanged();
        } else {
          precipitationDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      public Builder setPrecipitationData(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (precipitationDataBuilder_ == null) {
          precipitationData_ = builderForValue.build();
          onChanged();
        } else {
          precipitationDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      public Builder mergePrecipitationData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (precipitationDataBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              precipitationData_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            precipitationData_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(precipitationData_).mergeFrom(value).buildPartial();
          } else {
            precipitationData_ = value;
          }
          onChanged();
        } else {
          precipitationDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      public Builder clearPrecipitationData() {
        if (precipitationDataBuilder_ == null) {
          precipitationData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          precipitationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getPrecipitationDataBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getPrecipitationDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getPrecipitationDataOrBuilder() {
        if (precipitationDataBuilder_ != null) {
          return precipitationDataBuilder_.getMessageOrBuilder();
        } else {
          return precipitationData_;
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix precipitationData = 19;</code>
       *
       * <pre>
       * Precipitation
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getPrecipitationDataFieldBuilder() {
        if (precipitationDataBuilder_ == null) {
          precipitationDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  precipitationData_,
                  getParentForChildren(),
                  isClean());
          precipitationData_ = null;
        }
        return precipitationDataBuilder_;
      }

      // optional double precipitation_low = 20;
      private double precipitationLow_ ;
      /**
       * <code>optional double precipitation_low = 20;</code>
       */
      public boolean hasPrecipitationLow() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional double precipitation_low = 20;</code>
       */
      public double getPrecipitationLow() {
        return precipitationLow_;
      }
      /**
       * <code>optional double precipitation_low = 20;</code>
       */
      public Builder setPrecipitationLow(double value) {
        bitField0_ |= 0x00200000;
        precipitationLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double precipitation_low = 20;</code>
       */
      public Builder clearPrecipitationLow() {
        bitField0_ = (bitField0_ & ~0x00200000);
        precipitationLow_ = 0D;
        onChanged();
        return this;
      }

      // optional double precipitation_med = 21;
      private double precipitationMed_ ;
      /**
       * <code>optional double precipitation_med = 21;</code>
       */
      public boolean hasPrecipitationMed() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional double precipitation_med = 21;</code>
       */
      public double getPrecipitationMed() {
        return precipitationMed_;
      }
      /**
       * <code>optional double precipitation_med = 21;</code>
       */
      public Builder setPrecipitationMed(double value) {
        bitField0_ |= 0x00400000;
        precipitationMed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double precipitation_med = 21;</code>
       */
      public Builder clearPrecipitationMed() {
        bitField0_ = (bitField0_ & ~0x00400000);
        precipitationMed_ = 0D;
        onChanged();
        return this;
      }

      // optional .World.World.DoubleMatrix temperatureData = 22;
      private org.worldengine.world.WorldFile.World.DoubleMatrix temperatureData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> temperatureDataBuilder_;
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      public boolean hasTemperatureData() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getTemperatureData() {
        if (temperatureDataBuilder_ == null) {
          return temperatureData_;
        } else {
          return temperatureDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      public Builder setTemperatureData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (temperatureDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          temperatureData_ = value;
          onChanged();
        } else {
          temperatureDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      public Builder setTemperatureData(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (temperatureDataBuilder_ == null) {
          temperatureData_ = builderForValue.build();
          onChanged();
        } else {
          temperatureDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      public Builder mergeTemperatureData(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (temperatureDataBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000) &&
              temperatureData_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            temperatureData_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(temperatureData_).mergeFrom(value).buildPartial();
          } else {
            temperatureData_ = value;
          }
          onChanged();
        } else {
          temperatureDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      public Builder clearTemperatureData() {
        if (temperatureDataBuilder_ == null) {
          temperatureData_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          temperatureDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getTemperatureDataBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getTemperatureDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getTemperatureDataOrBuilder() {
        if (temperatureDataBuilder_ != null) {
          return temperatureDataBuilder_.getMessageOrBuilder();
        } else {
          return temperatureData_;
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix temperatureData = 22;</code>
       *
       * <pre>
       * Temperature
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getTemperatureDataFieldBuilder() {
        if (temperatureDataBuilder_ == null) {
          temperatureDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  temperatureData_,
                  getParentForChildren(),
                  isClean());
          temperatureData_ = null;
        }
        return temperatureDataBuilder_;
      }

      // optional double temperature_polar = 23;
      private double temperaturePolar_ ;
      /**
       * <code>optional double temperature_polar = 23;</code>
       */
      public boolean hasTemperaturePolar() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional double temperature_polar = 23;</code>
       */
      public double getTemperaturePolar() {
        return temperaturePolar_;
      }
      /**
       * <code>optional double temperature_polar = 23;</code>
       */
      public Builder setTemperaturePolar(double value) {
        bitField0_ |= 0x01000000;
        temperaturePolar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double temperature_polar = 23;</code>
       */
      public Builder clearTemperaturePolar() {
        bitField0_ = (bitField0_ & ~0x01000000);
        temperaturePolar_ = 0D;
        onChanged();
        return this;
      }

      // optional double temperature_alpine = 24;
      private double temperatureAlpine_ ;
      /**
       * <code>optional double temperature_alpine = 24;</code>
       */
      public boolean hasTemperatureAlpine() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional double temperature_alpine = 24;</code>
       */
      public double getTemperatureAlpine() {
        return temperatureAlpine_;
      }
      /**
       * <code>optional double temperature_alpine = 24;</code>
       */
      public Builder setTemperatureAlpine(double value) {
        bitField0_ |= 0x02000000;
        temperatureAlpine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double temperature_alpine = 24;</code>
       */
      public Builder clearTemperatureAlpine() {
        bitField0_ = (bitField0_ & ~0x02000000);
        temperatureAlpine_ = 0D;
        onChanged();
        return this;
      }

      // optional double temperature_boreal = 25;
      private double temperatureBoreal_ ;
      /**
       * <code>optional double temperature_boreal = 25;</code>
       */
      public boolean hasTemperatureBoreal() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional double temperature_boreal = 25;</code>
       */
      public double getTemperatureBoreal() {
        return temperatureBoreal_;
      }
      /**
       * <code>optional double temperature_boreal = 25;</code>
       */
      public Builder setTemperatureBoreal(double value) {
        bitField0_ |= 0x04000000;
        temperatureBoreal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double temperature_boreal = 25;</code>
       */
      public Builder clearTemperatureBoreal() {
        bitField0_ = (bitField0_ & ~0x04000000);
        temperatureBoreal_ = 0D;
        onChanged();
        return this;
      }

      // optional double temperature_cool = 26;
      private double temperatureCool_ ;
      /**
       * <code>optional double temperature_cool = 26;</code>
       */
      public boolean hasTemperatureCool() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional double temperature_cool = 26;</code>
       */
      public double getTemperatureCool() {
        return temperatureCool_;
      }
      /**
       * <code>optional double temperature_cool = 26;</code>
       */
      public Builder setTemperatureCool(double value) {
        bitField0_ |= 0x08000000;
        temperatureCool_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double temperature_cool = 26;</code>
       */
      public Builder clearTemperatureCool() {
        bitField0_ = (bitField0_ & ~0x08000000);
        temperatureCool_ = 0D;
        onChanged();
        return this;
      }

      // optional double temperature_warm = 27;
      private double temperatureWarm_ ;
      /**
       * <code>optional double temperature_warm = 27;</code>
       */
      public boolean hasTemperatureWarm() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional double temperature_warm = 27;</code>
       */
      public double getTemperatureWarm() {
        return temperatureWarm_;
      }
      /**
       * <code>optional double temperature_warm = 27;</code>
       */
      public Builder setTemperatureWarm(double value) {
        bitField0_ |= 0x10000000;
        temperatureWarm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double temperature_warm = 27;</code>
       */
      public Builder clearTemperatureWarm() {
        bitField0_ = (bitField0_ & ~0x10000000);
        temperatureWarm_ = 0D;
        onChanged();
        return this;
      }

      // optional double temperature_subtropical = 28;
      private double temperatureSubtropical_ ;
      /**
       * <code>optional double temperature_subtropical = 28;</code>
       */
      public boolean hasTemperatureSubtropical() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional double temperature_subtropical = 28;</code>
       */
      public double getTemperatureSubtropical() {
        return temperatureSubtropical_;
      }
      /**
       * <code>optional double temperature_subtropical = 28;</code>
       */
      public Builder setTemperatureSubtropical(double value) {
        bitField0_ |= 0x20000000;
        temperatureSubtropical_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double temperature_subtropical = 28;</code>
       */
      public Builder clearTemperatureSubtropical() {
        bitField0_ = (bitField0_ & ~0x20000000);
        temperatureSubtropical_ = 0D;
        onChanged();
        return this;
      }

      // optional .World.World.GenerationData generationData = 31;
      private org.worldengine.world.WorldFile.World.GenerationData generationData_ = org.worldengine.world.WorldFile.World.GenerationData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.GenerationData, org.worldengine.world.WorldFile.World.GenerationData.Builder, org.worldengine.world.WorldFile.World.GenerationDataOrBuilder> generationDataBuilder_;
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      public boolean hasGenerationData() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.GenerationData getGenerationData() {
        if (generationDataBuilder_ == null) {
          return generationData_;
        } else {
          return generationDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      public Builder setGenerationData(org.worldengine.world.WorldFile.World.GenerationData value) {
        if (generationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          generationData_ = value;
          onChanged();
        } else {
          generationDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      public Builder setGenerationData(
          org.worldengine.world.WorldFile.World.GenerationData.Builder builderForValue) {
        if (generationDataBuilder_ == null) {
          generationData_ = builderForValue.build();
          onChanged();
        } else {
          generationDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      public Builder mergeGenerationData(org.worldengine.world.WorldFile.World.GenerationData value) {
        if (generationDataBuilder_ == null) {
          if (((bitField0_ & 0x40000000) == 0x40000000) &&
              generationData_ != org.worldengine.world.WorldFile.World.GenerationData.getDefaultInstance()) {
            generationData_ =
              org.worldengine.world.WorldFile.World.GenerationData.newBuilder(generationData_).mergeFrom(value).buildPartial();
          } else {
            generationData_ = value;
          }
          onChanged();
        } else {
          generationDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      public Builder clearGenerationData() {
        if (generationDataBuilder_ == null) {
          generationData_ = org.worldengine.world.WorldFile.World.GenerationData.getDefaultInstance();
          onChanged();
        } else {
          generationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.GenerationData.Builder getGenerationDataBuilder() {
        bitField0_ |= 0x40000000;
        onChanged();
        return getGenerationDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      public org.worldengine.world.WorldFile.World.GenerationDataOrBuilder getGenerationDataOrBuilder() {
        if (generationDataBuilder_ != null) {
          return generationDataBuilder_.getMessageOrBuilder();
        } else {
          return generationData_;
        }
      }
      /**
       * <code>optional .World.World.GenerationData generationData = 31;</code>
       *
       * <pre>
       * Data about generation:
       * introduced in v0.5.3
       * this is optional for backward compatibility reasons
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.GenerationData, org.worldengine.world.WorldFile.World.GenerationData.Builder, org.worldengine.world.WorldFile.World.GenerationDataOrBuilder> 
          getGenerationDataFieldBuilder() {
        if (generationDataBuilder_ == null) {
          generationDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.GenerationData, org.worldengine.world.WorldFile.World.GenerationData.Builder, org.worldengine.world.WorldFile.World.GenerationDataOrBuilder>(
                  generationData_,
                  getParentForChildren(),
                  isClean());
          generationData_ = null;
        }
        return generationDataBuilder_;
      }

      // optional .World.World.DoubleMatrix lakemap = 32;
      private org.worldengine.world.WorldFile.World.DoubleMatrix lakemap_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> lakemapBuilder_;
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      public boolean hasLakemap() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getLakemap() {
        if (lakemapBuilder_ == null) {
          return lakemap_;
        } else {
          return lakemapBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      public Builder setLakemap(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (lakemapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lakemap_ = value;
          onChanged();
        } else {
          lakemapBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      public Builder setLakemap(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (lakemapBuilder_ == null) {
          lakemap_ = builderForValue.build();
          onChanged();
        } else {
          lakemapBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      public Builder mergeLakemap(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (lakemapBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              lakemap_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            lakemap_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(lakemap_).mergeFrom(value).buildPartial();
          } else {
            lakemap_ = value;
          }
          onChanged();
        } else {
          lakemapBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      public Builder clearLakemap() {
        if (lakemapBuilder_ == null) {
          lakemap_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          lakemapBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getLakemapBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getLakemapFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getLakemapOrBuilder() {
        if (lakemapBuilder_ != null) {
          return lakemapBuilder_.getMessageOrBuilder();
        } else {
          return lakemap_;
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix lakemap = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getLakemapFieldBuilder() {
        if (lakemapBuilder_ == null) {
          lakemapBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  lakemap_,
                  getParentForChildren(),
                  isClean());
          lakemap_ = null;
        }
        return lakemapBuilder_;
      }

      // optional .World.World.DoubleMatrix rivermap = 33;
      private org.worldengine.world.WorldFile.World.DoubleMatrix rivermap_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> rivermapBuilder_;
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      public boolean hasRivermap() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix getRivermap() {
        if (rivermapBuilder_ == null) {
          return rivermap_;
        } else {
          return rivermapBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      public Builder setRivermap(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (rivermapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rivermap_ = value;
          onChanged();
        } else {
          rivermapBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      public Builder setRivermap(
          org.worldengine.world.WorldFile.World.DoubleMatrix.Builder builderForValue) {
        if (rivermapBuilder_ == null) {
          rivermap_ = builderForValue.build();
          onChanged();
        } else {
          rivermapBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      public Builder mergeRivermap(org.worldengine.world.WorldFile.World.DoubleMatrix value) {
        if (rivermapBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001) &&
              rivermap_ != org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance()) {
            rivermap_ =
              org.worldengine.world.WorldFile.World.DoubleMatrix.newBuilder(rivermap_).mergeFrom(value).buildPartial();
          } else {
            rivermap_ = value;
          }
          onChanged();
        } else {
          rivermapBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      public Builder clearRivermap() {
        if (rivermapBuilder_ == null) {
          rivermap_ = org.worldengine.world.WorldFile.World.DoubleMatrix.getDefaultInstance();
          onChanged();
        } else {
          rivermapBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrix.Builder getRivermapBuilder() {
        bitField1_ |= 0x00000001;
        onChanged();
        return getRivermapFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      public org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder getRivermapOrBuilder() {
        if (rivermapBuilder_ != null) {
          return rivermapBuilder_.getMessageOrBuilder();
        } else {
          return rivermap_;
        }
      }
      /**
       * <code>optional .World.World.DoubleMatrix rivermap = 33;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder> 
          getRivermapFieldBuilder() {
        if (rivermapBuilder_ == null) {
          rivermapBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.worldengine.world.WorldFile.World.DoubleMatrix, org.worldengine.world.WorldFile.World.DoubleMatrix.Builder, org.worldengine.world.WorldFile.World.DoubleMatrixOrBuilder>(
                  rivermap_,
                  getParentForChildren(),
                  isClean());
          rivermap_ = null;
        }
        return rivermapBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:World.World)
    }

    static {
      defaultInstance = new World(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:World.World)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_DoubleRow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_DoubleRow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_BooleanRow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_BooleanRow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_IntegerRow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_IntegerRow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_ByteRow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_ByteRow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_DoubleMatrix_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_DoubleMatrix_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_BooleanMatrix_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_BooleanMatrix_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_IntegerMatrix_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_IntegerMatrix_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_DoubleQuantile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_DoubleQuantile_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_DoubleMatrixWithQuantiles_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_DoubleMatrixWithQuantiles_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_World_World_GenerationData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_World_World_GenerationData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013World.proto\022\005World\"\225\r\n\005World\022\014\n\004name\030\001" +
      " \002(\t\022\r\n\005width\030\002 \002(\005\022\016\n\006height\030\003 \002(\005\0220\n\rh" +
      "eightMapData\030\004 \002(\0132\031.World.World.DoubleM" +
      "atrix\022\027\n\017heightMapTh_sea\030\005 \002(\001\022\031\n\021height" +
      "MapTh_plain\030\006 \002(\001\022\030\n\020heightMapTh_hill\030\007 " +
      "\002(\001\022*\n\006plates\030\036 \002(\0132\032.World.World.Intege" +
      "rMatrix\022)\n\005ocean\030\010 \002(\0132\032.World.World.Boo" +
      "leanMatrix\022,\n\tsea_depth\030\035 \002(\0132\031.World.Wo" +
      "rld.DoubleMatrix\022)\n\005biome\030\t \001(\0132\032.World." +
      "World.IntegerMatrix\0228\n\010humidity\030\n \001(\0132&.",
      "World.World.DoubleMatrixWithQuantiles\022-\n" +
      "\nirrigation\030\013 \001(\0132\031.World.World.DoubleMa" +
      "trix\0223\n\020permeabilityData\030\014 \001(\0132\031.World.W" +
      "orld.DoubleMatrix\022\030\n\020permeability_low\030\r " +
      "\001(\001\022\030\n\020permeability_med\030\016 \001(\001\022/\n\014waterma" +
      "pData\030\017 \001(\0132\031.World.World.DoubleMatrix\022\026" +
      "\n\016watermap_creek\030\020 \001(\001\022\026\n\016watermap_river" +
      "\030\021 \001(\001\022\032\n\022watermap_mainriver\030\022 \001(\001\0224\n\021pr" +
      "ecipitationData\030\023 \001(\0132\031.World.World.Doub" +
      "leMatrix\022\031\n\021precipitation_low\030\024 \001(\001\022\031\n\021p",
      "recipitation_med\030\025 \001(\001\0222\n\017temperatureDat" +
      "a\030\026 \001(\0132\031.World.World.DoubleMatrix\022\031\n\021te" +
      "mperature_polar\030\027 \001(\001\022\032\n\022temperature_alp" +
      "ine\030\030 \001(\001\022\032\n\022temperature_boreal\030\031 \001(\001\022\030\n" +
      "\020temperature_cool\030\032 \001(\001\022\030\n\020temperature_w" +
      "arm\030\033 \001(\001\022\037\n\027temperature_subtropical\030\034 \001" +
      "(\001\0223\n\016generationData\030\037 \001(\0132\033.World.World" +
      ".GenerationData\022*\n\007lakemap\030  \001(\0132\031.World" +
      ".World.DoubleMatrix\022+\n\010rivermap\030! \001(\0132\031." +
      "World.World.DoubleMatrix\032\032\n\tDoubleRow\022\r\n",
      "\005cells\030\001 \003(\001\032\033\n\nBooleanRow\022\r\n\005cells\030\001 \003(" +
      "\010\032\033\n\nIntegerRow\022\r\n\005cells\030\001 \003(\005\032\030\n\007ByteRo" +
      "w\022\r\n\005cells\030\001 \003(\005\0324\n\014DoubleMatrix\022$\n\004rows" +
      "\030\001 \003(\0132\026.World.World.DoubleRow\0326\n\rBoolea" +
      "nMatrix\022%\n\004rows\030\001 \003(\0132\027.World.World.Bool" +
      "eanRow\0326\n\rIntegerMatrix\022%\n\004rows\030\001 \003(\0132\027." +
      "World.World.IntegerRow\032,\n\016DoubleQuantile" +
      "\022\013\n\003key\030\001 \002(\005\022\r\n\005value\030\002 \002(\001\032q\n\031DoubleMa" +
      "trixWithQuantiles\022.\n\tquantiles\030\001 \003(\0132\033.W" +
      "orld.World.DoubleQuantile\022$\n\004rows\030\002 \003(\0132",
      "\026.World.World.DoubleRow\032S\n\016GenerationDat" +
      "a\022\014\n\004seed\030\001 \001(\005\022\020\n\010n_plates\030\002 \001(\005\022\023\n\013oce" +
      "an_level\030\003 \001(\002\022\014\n\004step\030\004 \001(\tB\"\n\025org.worl" +
      "dengine.worldB\tWorldFile"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_World_World_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_World_World_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_descriptor,
              new java.lang.String[] { "Name", "Width", "Height", "HeightMapData", "HeightMapThSea", "HeightMapThPlain", "HeightMapThHill", "Plates", "Ocean", "SeaDepth", "Biome", "Humidity", "Irrigation", "PermeabilityData", "PermeabilityLow", "PermeabilityMed", "WatermapData", "WatermapCreek", "WatermapRiver", "WatermapMainriver", "PrecipitationData", "PrecipitationLow", "PrecipitationMed", "TemperatureData", "TemperaturePolar", "TemperatureAlpine", "TemperatureBoreal", "TemperatureCool", "TemperatureWarm", "TemperatureSubtropical", "GenerationData", "Lakemap", "Rivermap", });
          internal_static_World_World_DoubleRow_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(0);
          internal_static_World_World_DoubleRow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_DoubleRow_descriptor,
              new java.lang.String[] { "Cells", });
          internal_static_World_World_BooleanRow_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(1);
          internal_static_World_World_BooleanRow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_BooleanRow_descriptor,
              new java.lang.String[] { "Cells", });
          internal_static_World_World_IntegerRow_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(2);
          internal_static_World_World_IntegerRow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_IntegerRow_descriptor,
              new java.lang.String[] { "Cells", });
          internal_static_World_World_ByteRow_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(3);
          internal_static_World_World_ByteRow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_ByteRow_descriptor,
              new java.lang.String[] { "Cells", });
          internal_static_World_World_DoubleMatrix_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(4);
          internal_static_World_World_DoubleMatrix_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_DoubleMatrix_descriptor,
              new java.lang.String[] { "Rows", });
          internal_static_World_World_BooleanMatrix_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(5);
          internal_static_World_World_BooleanMatrix_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_BooleanMatrix_descriptor,
              new java.lang.String[] { "Rows", });
          internal_static_World_World_IntegerMatrix_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(6);
          internal_static_World_World_IntegerMatrix_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_IntegerMatrix_descriptor,
              new java.lang.String[] { "Rows", });
          internal_static_World_World_DoubleQuantile_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(7);
          internal_static_World_World_DoubleQuantile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_DoubleQuantile_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_World_World_DoubleMatrixWithQuantiles_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(8);
          internal_static_World_World_DoubleMatrixWithQuantiles_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_DoubleMatrixWithQuantiles_descriptor,
              new java.lang.String[] { "Quantiles", "Rows", });
          internal_static_World_World_GenerationData_descriptor =
            internal_static_World_World_descriptor.getNestedTypes().get(9);
          internal_static_World_World_GenerationData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_World_World_GenerationData_descriptor,
              new java.lang.String[] { "Seed", "NPlates", "OceanLevel", "Step", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
